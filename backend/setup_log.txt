Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=cadastro
Sessão fechada para query_1 e cadastro.
Execução de query_1 para cadastro concluída.
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=cadastro
Sessão fechada para query_1 e cadastro.
Execução de query_1 para cadastro concluída.
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=visitas
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=2024, mes=08, tipo=bpa
Sessão fechada para query_2 e visitas.
Execução de query_2 para visitas concluída.
Sessão fechada para query_3 e bpa.
Execução de query_3 para bpa concluída.
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Parâmetros recebidos: ano=None, mes=None, tipo=cadastro
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=visitas
Sessão fechada para query_2 e visitas.
Execução de query_2 para visitas concluída.
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=cadastro
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=visitas
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=bpa
Erro ao executar query_3 para bpa: (psycopg2.errors.InvalidTextRepresentation) invalid input syntax for type double precision: "None"
LINE 134:     AND EXTRACT(YEAR FROM tb_atend.dt_inicio) = 'None'
                                                          ^

[SQL: SELECT COUNT(*) FROM (SELECT DISTINCT  
    tb_unidade_saude.nu_cnes as PRD_UID,
    CAST(EXTRACT(YEAR FROM tb_atend.dt_inicio) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM tb_atend.dt_inicio) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS varchar(6)) AS PRD_CMP,
    tb_prof.nu_cns AS PRD_CNSMED,
    tb_cbo.co_cbo_2002 AS PRD_CBO,
    '001' AS PRD_FLH,
    '1' AS PRD_SEQ,
    CASE
        WHEN tb_proced.co_proced LIKE 'A%%' THEN SUBSTRING(tb_proced.co_proced_filtro, 9,10)
        ELSE tb_proced.co_proced
    END AS prd_pa,
    CASE 
        WHEN tb_cidadao.nu_cns IS NOT NULL THEN tb_cidadao.nu_cns 
        ELSE '' 
    END AS PRD_CNSPAC,
    CASE 
        WHEN tb_cidadao.nu_cns IS NULL THEN tb_cidadao.nu_cpf 
        ELSE '' 
    END AS PRD_CPF_PCNTE,
    SUBSTRING(tb_cidadao.no_cidadao, 1,30) AS PRD_NMPAC,
    EXTRACT(YEAR FROM tb_cidadao.dt_nascimento) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM tb_cidadao.dt_nascimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) || 
        CAST(LPAD(CAST(EXTRACT(DAY FROM tb_cidadao.dt_nascimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_DTNASC,
    CASE
        WHEN tb_cidadao.no_sexo = 'FEMININO' THEN 'F'
        ELSE 'M'
    END AS PRD_SEXO,
    CASE 
        WHEN tb_localidade.co_ibge IS NULL THEN '350390' 
        ELSE SUBSTRING(tb_localidade.co_ibge,1,6) 
    END AS PRD_IBGE,
    EXTRACT(YEAR FROM tb_atend.dt_inicio) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM tb_atend.dt_inicio) AS varchar(2)), 2, '0') AS VARCHAR(2)) || 
        CAST(LPAD(CAST(EXTRACT(DAY FROM tb_atend.dt_inicio) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_DTATEN,
    LEFT(string_agg(cast(TB_CID10.nu_cid10 AS varchar(4)), '  '), 4) AS PRD_CID,
    CAST(LPAD(CAST(EXTRACT(year FROM age(tb_cidadao.dt_nascimento)) AS varchar(3)), 3, '0') AS VARCHAR(3)) AS PRD_IDADE,
    000001 AS PRD_QT_P,
    '01' AS PRD_CATEN,
    '' AS PRD_NAUT,
    'BPI' AS PRD_ORG,
    EXTRACT(YEAR FROM tb_atend.dt_inicio) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM tb_atend.dt_inicio) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_MVM,
    '0' AS PRD_FLPA,
    '0' AS PRD_FLCBO,
    '0' AS PRD_FLCA,
    '0' AS PRD_FLIDA,
    '0' AS PRD_FLQT,
    '0' AS PRD_FLER,
    '0' AS PRD_FLMUN,
    '0' AS PRD_FLCID,
    CASE 
        WHEN tb_cidadao.co_raca_cor = '1' THEN '01'
        WHEN tb_cidadao.co_raca_cor = '2' THEN '02'           
        WHEN tb_cidadao.co_raca_cor = '3' THEN '04'           
        WHEN tb_cidadao.co_raca_cor = '4' THEN '03'           
        WHEN tb_cidadao.co_raca_cor = '5' THEN '05'           
        WHEN tb_cidadao.co_raca_cor = '6' THEN '03'     
        ELSE LPAD(CAST(tb_cidadao.co_raca_cor AS VARCHAR(2)), 2, '0')
    END AS PRD_RACA,
    '' AS PRD_SERVICO,
    '' AS PRD_CLASSIFICACAO,
    '' AS PRD_ETNIA,
    '010' AS PRD_NAC,
    '00' AS PRD_ADVQT,
    '' AS PRD_CNPJ,
    '' AS PRD_EQP_AREA,
    '' AS PRD_EQP_SEQ,
    CASE 
        WHEN tb_tipo_logradouro.nu_dne IS NULL THEN '081' 
        ELSE tb_tipo_logradouro.nu_dne 
    END AS PRD_LOGRAD_PCNTE,
    CASE 
        WHEN tb_cidadao.ds_cep IS NULL THEN '07400970'
        WHEN tb_cidadao.ds_cep IN ('07400000') THEN '07400970'
        ELSE tb_cidadao.ds_cep 
    END AS PRD_CEP_PCNTE,
    CASE
        WHEN tb_cidadao.ds_logradouro IS NULL THEN SUBSTRING('Avenida dos Expedicionarios',1,30)
        ELSE SUBSTRING(tb_cidadao.ds_logradouro,1,30) 
    END AS PRD_END_PCNTE,
    SUBSTRING(tb_cidadao.ds_complemento,1,10) AS PRD_COMPL_PCNTE,
    CASE
        WHEN tb_cidadao.nu_numero IS NULL THEN  SUBSTRING('S/N',1,5) 
        ELSE SUBSTRING(tb_cidadao.nu_numero,1,5) 
    END AS PRD_NUM_PCNTE,
    CASE WHEN tb_cidadao.no_bairro IS NULL THEN 'Centro' 
        ELSE SUBSTRING(tb_cidadao.no_bairro,1,30) 
    END AS PRD_BAIRRO_PCNTE,
    substring(tb_cidadao.nu_telefone_residencial, 1 , 2) AS PRD_DDTEL_PCNTE,
    substring(tb_cidadao.nu_telefone_residencial, 3 , 9) AS PRD_TEL_PCNTE,
    '' AS PRD_EMAIL_PCNTE,
    '' AS PRD_INE
FROM 
    public.tb_atend
LEFT JOIN 
    public.tb_status_atend ON tb_status_atend.co_status_atend = tb_atend.st_atend
LEFT JOIN 
    public.tb_unidade_saude ON tb_unidade_saude.co_seq_unidade_saude = tb_atend.co_unidade_saude
LEFT JOIN 
    public.tb_atend_prof ON tb_atend_prof.co_atend = tb_atend.co_seq_atend
LEFT JOIN 
    public.tb_lotacao ON tb_lotacao.co_ator_papel = tb_atend_prof.co_lotacao
LEFT JOIN 
    public.tb_prof ON tb_prof.co_seq_prof = tb_lotacao.co_prof
LEFT JOIN 
    public.tb_uf ON tb_uf.co_uf = tb_prof.co_uf_emissora_conselho_classe
LEFT JOIN 
    public.tb_conselho_classe ON tb_conselho_classe.co_conselho_classe = tb_prof.co_conselho_classe
LEFT JOIN 
    public.tb_cbo ON tb_cbo.co_cbo = tb_lotacao.co_cbo
LEFT JOIN 
    public.rl_atend_proced ON rl_atend_proced.co_atend_prof = tb_atend_prof.co_seq_atend_prof
INNER JOIN 
    public.tb_proced ON tb_proced.co_seq_proced = Rl_atend_proced.co_proced
LEFT JOIN 
    public.rl_evolucao_avaliacao_ciap_cid ON rl_evolucao_avaliacao_ciap_cid.co_atend_prof = tb_atend_prof.co_seq_atend_prof
LEFT JOIN 
    public.tb_cid10 ON tb_cid10.co_cid10 = rl_evolucao_avaliacao_ciap_cid.co_cid10
LEFT JOIN 
    public.tb_prontuario ON tb_prontuario.co_seq_prontuario = tb_atend.co_prontuario
LEFT JOIN 
    public.tb_cidadao ON tb_cidadao.co_seq_cidadao = tb_prontuario.co_cidadao
LEFT JOIN 
    public.tb_tipo_logradouro ON tb_tipo_logradouro.co_tipo_logradouro = tb_cidadao.tp_logradouro
LEFT JOIN 
    tb_localidade ON tb_localidade.co_localidade = tb_cidadao.co_localidade_endereco
LEFT JOIN 
    tb_uf pes_uf ON pes_uf.co_uf = tb_cidadao.co_uf
LEFT JOIN 
    tb_ciap tc ON rl_evolucao_avaliacao_ciap_cid.co_ciap = tc.co_seq_ciap 
WHERE 
    tb_unidade_saude.nu_cnes IN ('6896847', '6896839', '6628842', '0491381', '6430163')
    AND EXTRACT(YEAR FROM tb_atend.dt_inicio) = %(ano)s
    AND EXTRACT(MONTH FROM tb_atend.dt_inicio) = %(mes)s
    AND tb_proced.co_proced NOT IN ('ABPO015', 'ABPG040', 'ABPG039', 'ABPG038', 'ABPG034', 'ABEX022', 'ABEX013', 'ABEX012', 
                                    '0301100268', '0301100250', '0101040083', '0101040075')
GROUP BY 
    tb_unidade_saude.nu_cnes, tb_atend.dt_inicio, tb_prof.nu_cns, tb_cbo.co_cbo_2002, 
    tb_proced.co_proced, tb_proced.co_proced_filtro, tb_cidadao.nu_cns, tb_cidadao.no_cidadao,
    tb_cidadao.dt_nascimento, tb_cidadao.no_sexo, tb_localidade.co_ibge,
    tb_cidadao.co_raca_cor, tb_tipo_logradouro.nu_dne, tb_cidadao.ds_cep, tb_cidadao.ds_logradouro,
    tb_cidadao.ds_complemento, tb_cidadao.nu_numero, tb_cidadao.no_bairro, tb_cidadao.nu_telefone_residencial,
    tb_cidadao.nu_cpf
    UNION ALL
SELECT DISTINCT  
    tb_unidade_saude.nu_cnes as PRD_UID,
    CAST(EXTRACT(YEAR FROM tb_atend.dt_inicio) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM tb_atend.dt_inicio) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS varchar(6)) AS PRD_CMP,
    tb_prof.nu_cns AS PRD_CNSMED,
    tb_cbo.co_cbo_2002 AS PRD_CBO,
    '001' AS PRD_FLH,
    '1' AS PRD_SEQ,
    CASE
        WHEN tb_proced.co_proced LIKE 'A%%' THEN SUBSTRING(tb_proced.co_proced_filtro, 9,10)
        ELSE tb_proced.co_proced
    END AS prd_pa,
    CASE 
        WHEN tb_cidadao.nu_cns IS NOT NULL THEN tb_cidadao.nu_cns 
        ELSE '' 
    END AS PRD_CNSPAC,
    CASE 
        WHEN tb_cidadao.nu_cns IS NULL THEN tb_cidadao.nu_cpf 
        ELSE '' 
    END AS PRD_CPF_PCNTE,
    SUBSTRING(tb_cidadao.no_cidadao, 1,30) AS PRD_NMPAC,
    EXTRACT(YEAR FROM tb_cidadao.dt_nascimento) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM tb_cidadao.dt_nascimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) || 
        CAST(LPAD(CAST(EXTRACT(DAY FROM tb_cidadao.dt_nascimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_DTNASC,
    CASE
        WHEN tb_cidadao.no_sexo = 'FEMININO' THEN 'F'
        ELSE 'M'
    END AS PRD_SEXO,
    CASE 
        WHEN tb_localidade.co_ibge IS NULL THEN '350390' 
        ELSE SUBSTRING(tb_localidade.co_ibge,1,6) 
    END AS PRD_IBGE,
    EXTRACT(YEAR FROM tb_atend.dt_inicio) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM tb_atend.dt_inicio) AS varchar(2)), 2, '0') AS VARCHAR(2)) || 
        CAST(LPAD(CAST(EXTRACT(DAY FROM tb_atend.dt_inicio) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_DTATEN,
    LEFT(string_agg(cast(TB_CID10.nu_cid10 AS varchar(4)), '  '), 4) AS PRD_CID,
    CAST(LPAD(CAST(EXTRACT(year FROM age(tb_cidadao.dt_nascimento)) AS varchar(3)), 3, '0') AS VARCHAR(3)) AS PRD_IDADE,
    000001 AS PRD_QT_P,
    '01' AS PRD_CATEN,
    '' AS PRD_NAUT,
    'BPI' AS PRD_ORG,
    EXTRACT(YEAR FROM tb_atend.dt_inicio) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM tb_atend.dt_inicio) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_MVM,
    '0' AS PRD_FLPA,
    '0' AS PRD_FLCBO,
    '0' AS PRD_FLCA,
    '0' AS PRD_FLIDA,
    '0' AS PRD_FLQT,
    '0' AS PRD_FLER,
    '0' AS PRD_FLMUN,
    '0' AS PRD_FLCID,
    CASE 
        WHEN tb_cidadao.co_raca_cor = '1' THEN '01'
        WHEN tb_cidadao.co_raca_cor = '2' THEN '02'           
        WHEN tb_cidadao.co_raca_cor = '3' THEN '04'           
        WHEN tb_cidadao.co_raca_cor = '4' THEN '03'           
        WHEN tb_cidadao.co_raca_cor = '5' THEN '05'           
        WHEN tb_cidadao.co_raca_cor = '6' THEN '03'     
        ELSE LPAD(CAST(tb_cidadao.co_raca_cor AS VARCHAR(2)), 2, '0')
    END AS PRD_RACA,
    '' AS PRD_SERVICO,
    '' AS PRD_CLASSIFICACAO,
    '' AS PRD_ETNIA,
    '010' AS PRD_NAC,
    '00' AS PRD_ADVQT,
    '' AS PRD_CNPJ,
    '' AS PRD_EQP_AREA,
    '' AS PRD_EQP_SEQ,
    CASE 
        WHEN tb_tipo_logradouro.nu_dne IS NULL THEN '081' 
        ELSE tb_tipo_logradouro.nu_dne 
    END AS PRD_LOGRAD_PCNTE,
    CASE 
        WHEN tb_cidadao.ds_cep IS NULL THEN '07400970'
        WHEN tb_cidadao.ds_cep IN ('07400000') THEN '07400970'
        ELSE tb_cidadao.ds_cep 
    END AS PRD_CEP_PCNTE,
    CASE
        WHEN tb_cidadao.ds_logradouro IS NULL THEN SUBSTRING('A',1,30)
        ELSE SUBSTRING(tb_cidadao.ds_logradouro,1,30) 
    END AS PRD_END_PCNTE,
    SUBSTRING(tb_cidadao.ds_complemento,1,10) AS PRD_COMPL_PCNTE,
    CASE
        WHEN tb_cidadao.nu_numero IS NULL THEN  SUBSTRING('S/N',1,5) 
        ELSE SUBSTRING(tb_cidadao.nu_numero,1,5) 
    END AS PRD_NUM_PCNTE,
    CASE WHEN tb_cidadao.no_bairro IS NULL THEN 'Centro' 
        ELSE SUBSTRING(tb_cidadao.no_bairro,1,30) 
    END AS PRD_BAIRRO_PCNTE,
    substring(tb_cidadao.nu_telefone_residencial, 1 , 2) AS PRD_DDTEL_PCNTE,
    substring(tb_cidadao.nu_telefone_residencial, 3 , 9) AS PRD_TEL_PCNTE,
    '' AS PRD_EMAIL_PCNTE,
    '' AS PRD_INE
FROM 
    public.tb_atend
LEFT JOIN 
    public.tb_status_atend ON tb_status_atend.co_status_atend = tb_atend.st_atend
LEFT JOIN 
    public.tb_unidade_saude ON tb_unidade_saude.co_seq_unidade_saude = tb_atend.co_unidade_saude
LEFT JOIN 
    public.tb_atend_prof ON tb_atend_prof.co_atend = tb_atend.co_seq_atend
LEFT JOIN 
    public.tb_lotacao ON tb_lotacao.co_ator_papel = tb_atend_prof.co_lotacao
LEFT JOIN 
    public.tb_prof ON tb_prof.co_seq_prof = tb_lotacao.co_prof
LEFT JOIN 
    public.tb_uf ON tb_uf.co_uf = tb_prof.co_uf_emissora_conselho_classe
LEFT JOIN 
    public.tb_conselho_classe ON tb_conselho_classe.co_conselho_classe = tb_prof.co_conselho_classe
LEFT JOIN 
    public.tb_cbo ON tb_cbo.co_cbo = tb_lotacao.co_cbo
LEFT JOIN 
    rl_evolucao_plano_ciap ON rl_evolucao_plano_ciap.co_atend_prof = tb_atend_prof.co_seq_atend_prof
INNER JOIN 
    tb_proced ON tb_proced.co_seq_proced = rl_evolucao_plano_ciap.co_proced
LEFT JOIN 
    public.rl_evolucao_avaliacao_ciap_cid ON rl_evolucao_avaliacao_ciap_cid.co_atend_prof = tb_atend_prof.co_seq_atend_prof
LEFT JOIN 
    public.tb_cid10 ON tb_cid10.co_cid10 = rl_evolucao_avaliacao_ciap_cid.co_cid10
LEFT JOIN 
    public.tb_prontuario ON tb_prontuario.co_seq_prontuario = tb_atend.co_prontuario
LEFT JOIN 
    public.tb_cidadao ON tb_cidadao.co_seq_cidadao = tb_prontuario.co_cidadao
LEFT JOIN 
    public.tb_tipo_logradouro ON tb_tipo_logradouro.co_tipo_logradouro = tb_cidadao.tp_logradouro
LEFT JOIN 
    tb_localidade ON tb_localidade.co_localidade = tb_cidadao.co_localidade_endereco
LEFT JOIN 
    tb_uf pes_uf ON pes_uf.co_uf = tb_cidadao.co_uf
LEFT JOIN 
    tb_ciap tc ON rl_evolucao_avaliacao_ciap_cid.co_ciap = tc.co_seq_ciap 
WHERE 
    tb_unidade_saude.nu_cnes IN ('6896847', '6896839', '6628842', '0491381', '6430163')
    AND EXTRACT(YEAR FROM tb_atend.dt_inicio) = %(ano)s
    AND EXTRACT(MONTH FROM tb_atend.dt_inicio) = %(mes)s  
    AND tb_proced.co_proced NOT IN ('ABPO015', 'ABPG040', 'ABPG039', 'ABPG038', 'ABPG034', 'ABEX022', 'ABEX013', 'ABEX012', 
                                    '0301100268', '0301100250', '0101040083', '0101040075')
GROUP BY 
    tb_unidade_saude.nu_cnes, tb_atend.dt_inicio, tb_prof.nu_cns, tb_cbo.co_cbo_2002, 
    tb_proced.co_proced, tb_proced.co_proced_filtro, tb_cidadao.nu_cns, tb_cidadao.no_cidadao,
    tb_cidadao.dt_nascimento, tb_cidadao.no_sexo, tb_localidade.co_ibge,
    tb_cidadao.co_raca_cor, tb_tipo_logradouro.nu_dne, tb_cidadao.ds_cep, tb_cidadao.ds_logradouro,
    tb_cidadao.ds_complemento, tb_cidadao.nu_numero, tb_cidadao.no_bairro, tb_cidadao.nu_telefone_residencial,
    tb_cidadao.nu_cpf
UNION ALL
SELECT DISTINCT  
    tb_dim_unidade_saude.nu_cnes as PRD_UID,
    CAST(EXTRACT(YEAR FROM tb_fat_proced_atend.dt_inicial_atendimento) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM tb_fat_proced_atend.dt_inicial_atendimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS varchar(6)) AS PRD_CMP,
    tb_dim_profissional.nu_cns AS PRD_CNSMED,
    tb_dim_cbo.nu_cbo AS PRD_CBO,
    '001' AS PRD_FLH,
    '1' AS PRD_SEQ,    
    CASE 
        WHEN tb_dim_procedimento.co_proced IN ('ABEX004') THEN '0211020036'    
        WHEN tb_dim_procedimento.co_proced IN ('ABPG001') THEN '0309050022'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG002') THEN '0101040059'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG003') THEN '0301100047'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG004') THEN '0303080019'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG005') THEN '0401020177'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG006') THEN '0301100063'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG007') THEN '0301100276'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG008') THEN '0401010031'
        WHEN tb_dim_procedimento.co_proced IN ('ABEX004') THEN '0211020036'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG010') THEN '0201020033'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG012') THEN '0401010074'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG013') THEN '0211060100'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG014') THEN '0303090030'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG015') THEN '0404010300'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG016') THEN '0401010112'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG017') THEN '0404010270'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG018') THEN '0301100152'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG019') THEN '0401010066'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG020') THEN '0211060275' 
        WHEN tb_dim_procedimento.co_proced IN ('ABPG021') THEN '0404010342'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG022') THEN '0214010066'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG024') THEN '0214010058'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG025') THEN '0214010090'
        WHEN tb_dim_procedimento.co_proced IN ('ABEX026') THEN '0202010473'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG026') THEN '0214010074'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG027') THEN '0301100217'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG028') THEN '0301100209'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG029') THEN '0301100195'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG030') THEN '0301100101'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG031') THEN '0301100233'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG032') THEN '0301100241'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG033') THEN '0301100039'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG040') THEN '0214010155'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG041') THEN '0301100225'
        ELSE tb_dim_procedimento.co_proced 
    END AS prd_pa,
    CASE 
        WHEN tb_cidadao.nu_cns IS NOT NULL THEN tb_cidadao.nu_cns 
        ELSE '' 
    END AS PRD_CNSPAC,
    CASE 
        WHEN tb_cidadao.nu_cns IS NULL THEN tb_cidadao.nu_cpf 
        ELSE '' 
    END AS PRD_CPF_PCNTE,
    SUBSTRING(tb_cidadao.no_cidadao, 1,30) AS PRD_NMPAC,
    EXTRACT(YEAR FROM tb_cidadao.dt_nascimento) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM tb_cidadao.dt_nascimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) || 
        CAST(LPAD(CAST(EXTRACT(DAY FROM tb_cidadao.dt_nascimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_DTNASC,
    CASE
        WHEN tb_cidadao.no_sexo = 'FEMININO' THEN 'F'
        ELSE 'M'
    END AS PRD_SEXO,
    CASE 
        WHEN tb_dim_municipio.co_ibge IS NULL THEN '350390' 
        ELSE SUBSTRING(tb_dim_municipio.co_ibge,1,6) 
    END AS PRD_IBGE,
    EXTRACT(YEAR FROM tb_fat_proced_atend.dt_inicial_atendimento) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM tb_fat_proced_atend.dt_inicial_atendimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) || 
        CAST(LPAD(CAST(EXTRACT(DAY FROM tb_fat_proced_atend.dt_inicial_atendimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_DTATEN,
    '0' AS PRD_CID,
    CAST(LPAD(CAST(EXTRACT(year FROM age(tb_cidadao.dt_nascimento)) AS varchar(3)), 3, '0') AS VARCHAR(3)) AS PRD_IDADE,
    000001 AS PRD_QT_P,
    '01' AS PRD_CATEN,
    '' AS PRD_NAUT,
    'BPI' AS PRD_ORG,
    EXTRACT(YEAR FROM tb_fat_proced_atend.dt_inicial_atendimento) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM tb_fat_proced_atend.dt_inicial_atendimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_MVM,
    '0' AS PRD_FLPA,
    '0' AS PRD_FLCBO,
    '0' AS PRD_FLCA,
    '0' AS PRD_FLIDA,
    '0' AS PRD_FLQT,
    '0' AS PRD_FLER,
    '0' AS PRD_FLMUN,
    '0' AS PRD_FLCID,
    CASE 
        WHEN tb_cidadao.co_raca_cor = '1' THEN '01'
        WHEN tb_cidadao.co_raca_cor = '2' THEN '02'           
        WHEN tb_cidadao.co_raca_cor = '3' THEN '04'           
        WHEN tb_cidadao.co_raca_cor = '4' THEN '03'           
        WHEN tb_cidadao.co_raca_cor = '5' THEN '05'           
        WHEN tb_cidadao.co_raca_cor = '6' THEN '03'     
        ELSE LPAD(CAST(tb_cidadao.co_raca_cor AS VARCHAR(2)), 2, '0')
    END AS PRD_RACA,
    '' AS PRD_SERVICO,
    '' AS PRD_CLASSIFICACAO,
    '' AS PRD_ETNIA,
    '010' AS PRD_NAC,
    '00' AS PRD_ADVQT,
    '' AS PRD_CNPJ,
    '' AS PRD_EQP_AREA,
    '' AS PRD_EQP_SEQ,
    '081' AS PRD_LOGRAD_PCNTE,
    CASE 
        WHEN tb_cidadao.ds_cep IS NULL THEN '07400970'
        WHEN tb_cidadao.ds_cep IN ('07400000') THEN '07400970'
        ELSE tb_cidadao.ds_cep 
    END AS PRD_CEP_PCNTE,
    CASE
        WHEN tb_cidadao.ds_logradouro IS NULL THEN SUBSTRING('Avenida dos Expedicionarios',1,30)
        ELSE SUBSTRING(tb_cidadao.ds_logradouro,1,30) 
    END AS PRD_END_PCNTE,
    SUBSTRING(tb_cidadao.ds_complemento,1,10) AS PRD_COMPL_PCNTE,
    CASE
        WHEN tb_cidadao.nu_numero IS NULL THEN  SUBSTRING('S/N',1,5) 
        ELSE SUBSTRING(tb_cidadao.nu_numero,1,5) 
    END AS PRD_NUM_PCNTE,
    CASE WHEN tb_cidadao.no_bairro IS NULL THEN 'Centro' 
        ELSE SUBSTRING(tb_cidadao.no_bairro,1,30) 
    END AS PRD_BAIRRO_PCNTE,
    substring(tb_cidadao.nu_telefone_residencial, 1 , 2) AS PRD_DDTEL_PCNTE,
    substring(tb_cidadao.nu_telefone_residencial, 3 , 9) AS PRD_TEL_PCNTE,
    '' AS PRD_EMAIL_PCNTE,
    '' AS PRD_INE     
FROM 
    tb_fat_proced_atend
RIGHT JOIN 
    tb_fat_proced_atend_proced tb_fat_proced_atend_proced ON tb_fat_proced_atend_proced.co_fat_procedimento = tb_fat_proced_atend.co_fat_procedimento 
    AND tb_fat_proced_atend_proced.nu_atendimento = tb_fat_proced_atend.nu_atendimento
LEFT JOIN 
    tb_dim_procedimento p1 ON p1.co_seq_dim_procedimento = tb_fat_proced_atend_proced.co_dim_procedimento
LEFT JOIN 
    tb_dim_procedimento p2 ON p2.co_seq_dim_procedimento = p2.co_seq_dim_proced_ref_ab
INNER JOIN 
    tb_fat_cidadao_pec ON tb_fat_cidadao_pec.co_seq_fat_cidadao_pec = tb_fat_proced_atend.co_fat_cidadao_pec
LEFT JOIN 
    tb_prontuario ON tb_prontuario.co_cidadao = tb_fat_cidadao_pec.co_cidadao
LEFT JOIN 
    tb_cidadao ON tb_cidadao.co_seq_cidadao = tb_prontuario.co_cidadao  
LEFT JOIN 
    tb_fat_cidadao_pec AS Fatcid ON Fatcid.nu_cns = tb_cidadao.nu_cns
LEFT JOIN 
    tb_cidadao_grupo ON tb_cidadao_grupo.co_cidadao = tb_fat_cidadao_pec.co_cidadao  
INNER JOIN 
    tb_dim_procedimento ON tb_dim_procedimento.co_seq_dim_procedimento = tb_fat_proced_atend_proced.co_dim_procedimento
INNER JOIN 
    tb_dim_profissional ON tb_dim_profissional.co_seq_dim_profissional = tb_fat_proced_atend_proced.co_dim_profissional
INNER JOIN 
    tb_dim_tipo_origem ON tb_dim_tipo_origem.co_seq_dim_tipo_origem = tb_fat_proced_atend_proced.co_dim_cds_tipo_origem
INNER JOIN 
    tb_dim_local_atendimento ON tb_dim_local_atendimento.co_seq_dim_local_atendimento = tb_fat_proced_atend_proced.co_dim_local_atendimento
INNER JOIN 
    tb_dim_cbo ON tb_dim_cbo.co_seq_dim_cbo = tb_fat_proced_atend_proced.co_dim_cbo
INNER JOIN 
    tb_dim_unidade_saude ON tb_dim_unidade_saude.co_seq_dim_unidade_saude = tb_fat_proced_atend_proced.co_dim_unidade_saude
INNER JOIN 
    tb_dim_sexo ON tb_dim_sexo.co_seq_dim_sexo = tb_fat_proced_atend_proced.co_dim_sexo
INNER JOIN 
    tb_dim_tipo_ficha ON tb_dim_tipo_ficha.co_seq_dim_tipo_ficha = tb_fat_proced_atend_proced.co_dim_tipo_ficha
INNER JOIN 
    tb_dim_equipe ON tb_dim_equipe.co_seq_dim_equipe = tb_fat_proced_atend_proced.co_dim_equipe
INNER JOIN 
    tb_dim_faixa_etaria ON tb_dim_faixa_etaria.co_seq_dim_faixa_etaria = tb_fat_proced_atend.co_dim_faixa_etaria
INNER JOIN 
    tb_dim_tempo ON tb_dim_tempo.co_seq_dim_tempo = tb_fat_proced_atend_proced.co_dim_tempo
INNER JOIN 
    tb_dim_municipio ON tb_dim_municipio.co_seq_dim_municipio = tb_fat_proced_atend_proced.co_dim_municipio
INNER JOIN 
    tb_dim_turno ON tb_dim_turno.co_seq_dim_turno = tb_fat_proced_atend_proced.co_dim_turno
INNER JOIN 
    tb_dim_tipo_origem_dado_transp ON tb_dim_tipo_origem_dado_transp.co_seq_dim_tp_orgm_dado_transp = tb_fat_proced_atend_proced.co_dim_tipo_origem_dado_transp 
WHERE 
    tb_dim_unidade_saude.nu_cnes IN ('6896847', '6896839', '6628842', '0491381', '6430163')
    AND EXTRACT(YEAR FROM tb_fat_proced_atend.dt_inicial_atendimento) = %(ano)s
    AND EXTRACT(MONTH FROM tb_fat_proced_atend.dt_inicial_atendimento) = %(mes)s
    AND tb_dim_procedimento.co_proced NOT IN ('0301080020','0211020079','0301100209','0301100195',
                                              '0301100217','0301100225','ABPO015','ABPG040','ABPG039','ABPG038','ABPG034',
                                              'ABEX022','ABEX013','ABEX012','0301100268','0301100250','0101040083',
                                              '0101040075')
    AND tb_dim_tipo_ficha.nu_identificador = '7'
UNION ALL
SELECT DISTINCT
    unidade.nu_cnes AS PRD_UID,
    CAST(EXTRACT(YEAR FROM atend.dt_final_atendimento) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM atend.dt_final_atendimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS VARCHAR(6)) AS PRD_CMP,
    Prof.nu_cns AS PRD_CNSMED,
    cbo.nu_cbo AS PRD_CBO,
    '001' AS PRD_FLH,
    '1' AS PRD_SEQ,
    UNNEST(REGEXP_MATCHES(fat_proced_atend.ds_filtro_procedimento, '[^\|]+', 'g')) AS PRD_PA,
    CASE 
        WHEN cid.nu_cns IS NOT NULL THEN cid.nu_cns 
        ELSE '' 
    END AS PRD_CNSPAC,
    CASE 
        WHEN cid.nu_cns IS NULL THEN cid.nu_cpf 
        ELSE '' 
    END AS PRD_CPF_PCNTE,
    SUBSTRING(cid.no_cidadao, 1,30) AS PRD_NMPAC,
    EXTRACT(YEAR FROM cid.dt_nascimento) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM cid.dt_nascimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) || 
        CAST(LPAD(CAST(EXTRACT(DAY FROM cid.dt_nascimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_DTNASC,
    CASE
        WHEN cid.no_sexo = 'FEMININO' THEN 'F'
        ELSE 'M'
    END AS PRD_SEXO,
    CASE 
        WHEN tb_localidade.co_ibge IS NULL THEN '350390' 
        ELSE SUBSTRING(tb_localidade.co_ibge,1,6) 
    END AS PRD_IBGE,
    EXTRACT(YEAR FROM atend.dt_inicial_atendimento) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM atend.dt_inicial_atendimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) || 
        CAST(LPAD(CAST(EXTRACT(DAY FROM atend.dt_inicial_atendimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_DTATEN,
    CASE 
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302070036%%' THEN 'T951'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302010025%%' THEN 'N319'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302070010%%' THEN 'T302'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302060057%%' THEN 'S141'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302060030%%' THEN 'G838'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302060014%%' THEN 'I694'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302050027%%' THEN 'M255'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302050019%%' THEN 'T932'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302040056%%' THEN 'I988'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302040030%%' THEN 'Q048'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302040021%%' THEN 'J998'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302060022%%' THEN 'I694'       
        ELSE REPLACE(atend.ds_filtro_cids, '|', '')
    END AS PRD_CID,
    CAST(LPAD(CAST(EXTRACT(YEAR FROM age(cid.dt_nascimento)) AS varchar(3)), 3, '0') AS VARCHAR(3)) AS PRD_IDADE,
    000001 AS PRD_QT_P,
    '01' AS PRD_CATEN,
    '' AS PRD_NAUT,
    'BPI' AS PRD_ORG,
    EXTRACT(YEAR FROM atend.dt_inicial_atendimento) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM atend.dt_inicial_atendimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_MVM,
    '0' AS PRD_FLPA,
    '0' AS PRD_FLCBO,
    '0' AS PRD_FLCA,
    '0' AS PRD_FLIDA,
    '0' AS PRD_FLQT,
    '0' AS PRD_FLER,
    '0' AS PRD_FLMUN,
    '0' AS PRD_FLCID,
    CASE 
        WHEN cid.co_raca_cor = '1' THEN '01'
        WHEN cid.co_raca_cor = '2' THEN '02'           
        WHEN cid.co_raca_cor = '3' THEN '04'           
        WHEN cid.co_raca_cor = '4' THEN '03'           
        WHEN cid.co_raca_cor = '5' THEN '05'           
        WHEN cid.co_raca_cor = '6' THEN '03'     
        ELSE LPAD(CAST(cid.co_raca_cor AS VARCHAR(2)), 2, '0')
    END AS PRD_RACA,
    '' AS PRD_SERVICO,
    '' AS PRD_CLASSIFICACAO,
    '' AS PRD_ETNIA,
    '010' AS PRD_NAC,
    '00' AS PRD_ADVQT,
    '' AS PRD_CNPJ,
    '' AS PRD_EQP_AREA,
    '' AS PRD_EQP_SEQ,
    CASE 
        WHEN tb_tipo_logradouro.nu_dne IS NULL THEN '081' 
        ELSE tb_tipo_logradouro.nu_dne 
    END AS PRD_LOGRAD_PCNTE,
    CASE 
        WHEN cid.ds_cep IS NULL THEN '07400970'
        WHEN cid.ds_cep IN ('07400000') THEN '07400970'
        ELSE cid.ds_cep 
    END AS PRD_CEP_PCNTE,
    CASE
        WHEN cid.ds_logradouro IS NULL THEN SUBSTRING('Avenida dos Expedicionarios',1,30)
        ELSE SUBSTRING(cid.ds_logradouro,1,30) 
    END AS PRD_END_PCNTE,
    SUBSTRING(cid.ds_complemento,1,10) AS PRD_COMPL_PCNTE,
    CASE
        WHEN cid.nu_numero IS NULL THEN  SUBSTRING('S/N',1,5) 
        ELSE SUBSTRING(cid.nu_numero,1,5) 
    END AS PRD_NUM_PCNTE,
    CASE WHEN cid.no_bairro IS NULL THEN 'Centro' 
        ELSE SUBSTRING(cid.no_bairro,1,30) 
    END AS PRD_BAIRRO_PCNTE,
    SUBSTRING(cid.nu_telefone_residencial, 1 , 2) AS PRD_DDTEL_PCNTE,
    SUBSTRING(cid.nu_telefone_residencial, 3 , 9) AS PRD_TEL_PCNTE,
    '' AS PRD_EMAIL_PCNTE,
    '' AS PRD_INE 
FROM 
    tb_fat_atendimento_individual atend
INNER JOIN 
    tb_dim_municipio tb_localidade ON atend.co_dim_municipio = tb_localidade.co_seq_dim_municipio
INNER JOIN 
    tb_dim_uf dimensaouf2_ ON tb_localidade.co_dim_uf = dimensaouf2_.co_seq_dim_uf
INNER JOIN 
    tb_dim_unidade_saude unidade ON atend.co_dim_unidade_saude_1 = unidade.co_seq_dim_unidade_saude
INNER JOIN 
    tb_dim_equipe dimensaoeq4_ ON atend.co_dim_equipe_1 = dimensaoeq4_.co_seq_dim_equipe
INNER JOIN 
    tb_dim_profissional Prof ON atend.co_dim_profissional_1 = Prof.co_seq_dim_profissional
INNER JOIN 
    tb_dim_tipo_atendimento dimtipoate6_ ON atend.co_dim_tipo_atendimento = dimtipoate6_.co_seq_dim_tipo_atendimento
INNER JOIN 
    tb_dim_sexo dimensaose7_ ON atend.co_dim_sexo = dimensaose7_.co_seq_dim_sexo
INNER JOIN 
    tb_dim_tipo_origem dimensaoti8_ ON atend.co_dim_cds_tipo_origem = dimensaoti8_.co_seq_dim_tipo_origem
INNER JOIN 
    tb_dim_turno dimensaotu9_ ON atend.co_dim_turno = dimensaotu9_.co_seq_dim_turno
INNER JOIN 
    tb_dim_cbo cbo ON atend.co_dim_cbo_1 = cbo.co_seq_dim_cbo
INNER JOIN 
    tb_fat_proced_atend fat_proced_atend ON atend.nu_uuid_ficha = fat_proced_atend.nu_uuid_ficha
INNER JOIN    
	tb_fat_cidadao_pec tfcp ON atend.co_fat_cidadao_pec = tfcp.co_seq_fat_cidadao_pec
INNER JOIN
    tb_cidadao cid ON tfcp.co_cidadao = cid.co_seq_cidadao
JOIN
    public.tb_tipo_logradouro ON tb_tipo_logradouro.co_tipo_logradouro = cid.tp_logradouro
WHERE 
TO_CHAR(TO_DATE(atend.co_dim_tempo::text, 'YYYYMMDD'), 'YYYY') = %(ano)s
AND TO_CHAR(TO_DATE(atend.co_dim_tempo::text, 'YYYYMMDD'), 'MM') = %(mes)s
    AND unidade.nu_cnes = '4565703'
    AND (dimtipoate6_.co_seq_dim_tipo_atendimento <> '5'AND
  fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%ABPO015%%' 
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%ABPG010%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%ABPG012%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%ABPG040%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%ABPG039%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%ABPG038%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%ABPG034%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%ABEX022%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%ABEX013%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%ABEX012%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%0301100268%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%0301100250%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%0101040083%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%0101040075%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%0301010064%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%ABPG025%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%ABPG024%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%0301010030%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%0301010129%%')
    UNION ALL 
    SELECT DISTINCT
    unidade.nu_cnes AS PRD_UID,
    CAST(EXTRACT(YEAR FROM atend.dt_final_atendimento) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM atend.dt_final_atendimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS VARCHAR(6)) AS PRD_CMP,
    Prof.nu_cns AS PRD_CNSMED,
    cbo.nu_cbo AS PRD_CBO,
    '001' AS PRD_FLH,
    '1' AS PRD_SEQ,
    UNNEST(REGEXP_MATCHES(fat_proced_atend.ds_filtro_procedimento, '[^\|]+', 'g')) AS PRD_PA,
    CASE 
        WHEN cid.nu_cns IS NOT NULL THEN cid.nu_cns 
        ELSE '' 
    END AS PRD_CNSPAC,
    CASE 
        WHEN cid.nu_cns IS NULL THEN cid.nu_cpf 
        ELSE '' 
    END AS PRD_CPF_PCNTE,
    SUBSTRING(cid.no_cidadao, 1,30) AS PRD_NMPAC,
    EXTRACT(YEAR FROM cid.dt_nascimento) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM cid.dt_nascimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) || 
        CAST(LPAD(CAST(EXTRACT(DAY FROM cid.dt_nascimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_DTNASC,
    CASE
        WHEN cid.no_sexo = 'FEMININO' THEN 'F'
        ELSE 'M'
    END AS PRD_SEXO,
    CASE 
        WHEN tb_localidade.co_ibge IS NULL THEN '350390' 
        ELSE SUBSTRING(tb_localidade.co_ibge,1,6) 
    END AS PRD_IBGE,
    EXTRACT(YEAR FROM atend.dt_inicial_atendimento) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM atend.dt_inicial_atendimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) || 
        CAST(LPAD(CAST(EXTRACT(DAY FROM atend.dt_inicial_atendimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_DTATEN,
    CASE 
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302070036%%' THEN 'T951'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302010025%%' THEN 'N319'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302070010%%' THEN 'T302'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302060057%%' THEN 'S141'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302060030%%' THEN 'G838'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302060014%%' THEN 'I694'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302050027%%' THEN 'M255'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302050019%%' THEN 'T932'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302040056%%' THEN 'I988'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302040030%%' THEN 'Q048'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302040021%%' THEN 'J998'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302060022%%' THEN 'I694'       
        ELSE REPLACE(atend.ds_filtro_cids, '|', '')
    END AS PRD_CID,
    CAST(LPAD(CAST(EXTRACT(YEAR FROM age(cid.dt_nascimento)) AS varchar(3)), 3, '0') AS VARCHAR(3)) AS PRD_IDADE,
    000001 AS PRD_QT_P,
    '01' AS PRD_CATEN,
    '' AS PRD_NAUT,
    'BPI' AS PRD_ORG,
    EXTRACT(YEAR FROM atend.dt_inicial_atendimento) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM atend.dt_inicial_atendimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_MVM,
    '0' AS PRD_FLPA,
    '0' AS PRD_FLCBO,
    '0' AS PRD_FLCA,
    '0' AS PRD_FLIDA,
    '0' AS PRD_FLQT,
    '0' AS PRD_FLER,
    '0' AS PRD_FLMUN,
    '0' AS PRD_FLCID,
    CASE 
        WHEN cid.co_raca_cor = '1' THEN '01'
        WHEN cid.co_raca_cor = '2' THEN '02'           
        WHEN cid.co_raca_cor = '3' THEN '04'           
        WHEN cid.co_raca_cor = '4' THEN '03'           
        WHEN cid.co_raca_cor = '5' THEN '05'           
        WHEN cid.co_raca_cor = '6' THEN '03'     
        ELSE LPAD(CAST(cid.co_raca_cor AS VARCHAR(2)), 2, '0')
    END AS PRD_RACA,
    '' AS PRD_SERVICO,
    '' AS PRD_CLASSIFICACAO,
    '' AS PRD_ETNIA,
    '010' AS PRD_NAC,
    '00' AS PRD_ADVQT,
    '' AS PRD_CNPJ,
    '' AS PRD_EQP_AREA,
    '' AS PRD_EQP_SEQ,
    CASE 
        WHEN tb_tipo_logradouro.nu_dne IS NULL THEN '081' 
        ELSE tb_tipo_logradouro.nu_dne 
    END AS PRD_LOGRAD_PCNTE,
    CASE 
        WHEN cid.ds_cep IS NULL THEN '07400970'
        WHEN cid.ds_cep IN ('07400000') THEN '07400970'
        ELSE cid.ds_cep 
    END AS PRD_CEP_PCNTE,
    CASE
        WHEN cid.ds_logradouro IS NULL THEN SUBSTRING('Avenida dos Expedicionarios',1,30)
        ELSE SUBSTRING(cid.ds_logradouro,1,30) 
    END AS PRD_END_PCNTE,
    SUBSTRING(cid.ds_complemento,1,10) AS PRD_COMPL_PCNTE,
    CASE
        WHEN cid.nu_numero IS NULL THEN  SUBSTRING('S/N',1,5) 
        ELSE SUBSTRING(cid.nu_numero,1,5) 
    END AS PRD_NUM_PCNTE,
    CASE WHEN cid.no_bairro IS NULL THEN 'Centro' 
        ELSE SUBSTRING(cid.no_bairro,1,30) 
    END AS PRD_BAIRRO_PCNTE,
    SUBSTRING(cid.nu_telefone_residencial, 1 , 2) AS PRD_DDTEL_PCNTE,
    SUBSTRING(cid.nu_telefone_residencial, 3 , 9) AS PRD_TEL_PCNTE,
    '' AS PRD_EMAIL_PCNTE,
    '' AS PRD_INE 
FROM 
    tb_fat_atendimento_individual atend
INNER JOIN 
    tb_dim_municipio tb_localidade ON atend.co_dim_municipio = tb_localidade.co_seq_dim_municipio
INNER JOIN 
    tb_dim_uf dimensaouf2_ ON tb_localidade.co_dim_uf = dimensaouf2_.co_seq_dim_uf
INNER JOIN 
    tb_dim_unidade_saude unidade ON atend.co_dim_unidade_saude_1 = unidade.co_seq_dim_unidade_saude
INNER JOIN 
    tb_dim_equipe dimensaoeq4_ ON atend.co_dim_equipe_1 = dimensaoeq4_.co_seq_dim_equipe
INNER JOIN 
    tb_dim_profissional Prof ON atend.co_dim_profissional_1 = Prof.co_seq_dim_profissional
INNER JOIN 
    tb_dim_tipo_atendimento dimtipoate6_ ON atend.co_dim_tipo_atendimento = dimtipoate6_.co_seq_dim_tipo_atendimento
INNER JOIN 
    tb_dim_sexo dimensaose7_ ON atend.co_dim_sexo = dimensaose7_.co_seq_dim_sexo
INNER JOIN 
    tb_dim_tipo_origem dimensaoti8_ ON atend.co_dim_cds_tipo_origem = dimensaoti8_.co_seq_dim_tipo_origem
INNER JOIN 
    tb_dim_turno dimensaotu9_ ON atend.co_dim_turno = dimensaotu9_.co_seq_dim_turno
INNER JOIN 
    tb_dim_cbo cbo ON atend.co_dim_cbo_1 = cbo.co_seq_dim_cbo
INNER JOIN 
    tb_fat_proced_atend fat_proced_atend ON atend.nu_uuid_ficha = fat_proced_atend.nu_uuid_ficha
INNER JOIN    
	tb_fat_cidadao_pec tfcp ON atend.co_fat_cidadao_pec = tfcp.co_seq_fat_cidadao_pec
INNER JOIN
    tb_cidadao cid ON tfcp.co_cidadao = cid.co_seq_cidadao
JOIN
    public.tb_tipo_logradouro ON tb_tipo_logradouro.co_tipo_logradouro = cid.tp_logradouro
WHERE 
unidade.nu_cnes = '9001808' and cbo.nu_cbo like '225310'and  
	TO_CHAR(TO_DATE(atend.co_dim_tempo::text, 'YYYYMMDD'), 'YYYY') = %(ano)s
	AND TO_CHAR(TO_DATE(atend.co_dim_tempo::text, 'YYYYMMDD'), 'MM') = %(mes)s
    AND (fat_proced_atend.ds_filtro_procedimento like '%%0209010037%%'
    or fat_proced_atend.ds_filtro_procedimento like '%%0209010029%%'
    or fat_proced_atend.ds_filtro_procedimento like '%%0209010053%%')
    ORDER BY 9,13) as total_count]
[parameters: {'ano': 'None', 'mes': None}]
(Background on this error at: https://sqlalche.me/e/20/9h9h)
Sessão fechada para query_3 e bpa.
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=cadastro
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=visitas
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=visitas
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=visitas
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=cadastro
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=visitas
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=visitas
Sessão fechada para query_2 e visitas.
Execução de query_2 para visitas concluída.
Sessão fechada para query_2 e visitas.
Execução de query_2 para visitas concluída.
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=cadastro
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=visitas
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=bpa
Erro ao executar query_3 para bpa: (psycopg2.errors.InvalidTextRepresentation) invalid input syntax for type double precision: "None"
LINE 134:     AND EXTRACT(YEAR FROM tb_atend.dt_inicio) = 'None'
                                                          ^

[SQL: SELECT COUNT(*) FROM (SELECT DISTINCT  
    tb_unidade_saude.nu_cnes as PRD_UID,
    CAST(EXTRACT(YEAR FROM tb_atend.dt_inicio) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM tb_atend.dt_inicio) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS varchar(6)) AS PRD_CMP,
    tb_prof.nu_cns AS PRD_CNSMED,
    tb_cbo.co_cbo_2002 AS PRD_CBO,
    '001' AS PRD_FLH,
    '1' AS PRD_SEQ,
    CASE
        WHEN tb_proced.co_proced LIKE 'A%%' THEN SUBSTRING(tb_proced.co_proced_filtro, 9,10)
        ELSE tb_proced.co_proced
    END AS prd_pa,
    CASE 
        WHEN tb_cidadao.nu_cns IS NOT NULL THEN tb_cidadao.nu_cns 
        ELSE '' 
    END AS PRD_CNSPAC,
    CASE 
        WHEN tb_cidadao.nu_cns IS NULL THEN tb_cidadao.nu_cpf 
        ELSE '' 
    END AS PRD_CPF_PCNTE,
    SUBSTRING(tb_cidadao.no_cidadao, 1,30) AS PRD_NMPAC,
    EXTRACT(YEAR FROM tb_cidadao.dt_nascimento) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM tb_cidadao.dt_nascimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) || 
        CAST(LPAD(CAST(EXTRACT(DAY FROM tb_cidadao.dt_nascimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_DTNASC,
    CASE
        WHEN tb_cidadao.no_sexo = 'FEMININO' THEN 'F'
        ELSE 'M'
    END AS PRD_SEXO,
    CASE 
        WHEN tb_localidade.co_ibge IS NULL THEN '350390' 
        ELSE SUBSTRING(tb_localidade.co_ibge,1,6) 
    END AS PRD_IBGE,
    EXTRACT(YEAR FROM tb_atend.dt_inicio) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM tb_atend.dt_inicio) AS varchar(2)), 2, '0') AS VARCHAR(2)) || 
        CAST(LPAD(CAST(EXTRACT(DAY FROM tb_atend.dt_inicio) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_DTATEN,
    LEFT(string_agg(cast(TB_CID10.nu_cid10 AS varchar(4)), '  '), 4) AS PRD_CID,
    CAST(LPAD(CAST(EXTRACT(year FROM age(tb_cidadao.dt_nascimento)) AS varchar(3)), 3, '0') AS VARCHAR(3)) AS PRD_IDADE,
    000001 AS PRD_QT_P,
    '01' AS PRD_CATEN,
    '' AS PRD_NAUT,
    'BPI' AS PRD_ORG,
    EXTRACT(YEAR FROM tb_atend.dt_inicio) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM tb_atend.dt_inicio) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_MVM,
    '0' AS PRD_FLPA,
    '0' AS PRD_FLCBO,
    '0' AS PRD_FLCA,
    '0' AS PRD_FLIDA,
    '0' AS PRD_FLQT,
    '0' AS PRD_FLER,
    '0' AS PRD_FLMUN,
    '0' AS PRD_FLCID,
    CASE 
        WHEN tb_cidadao.co_raca_cor = '1' THEN '01'
        WHEN tb_cidadao.co_raca_cor = '2' THEN '02'           
        WHEN tb_cidadao.co_raca_cor = '3' THEN '04'           
        WHEN tb_cidadao.co_raca_cor = '4' THEN '03'           
        WHEN tb_cidadao.co_raca_cor = '5' THEN '05'           
        WHEN tb_cidadao.co_raca_cor = '6' THEN '03'     
        ELSE LPAD(CAST(tb_cidadao.co_raca_cor AS VARCHAR(2)), 2, '0')
    END AS PRD_RACA,
    '' AS PRD_SERVICO,
    '' AS PRD_CLASSIFICACAO,
    '' AS PRD_ETNIA,
    '010' AS PRD_NAC,
    '00' AS PRD_ADVQT,
    '' AS PRD_CNPJ,
    '' AS PRD_EQP_AREA,
    '' AS PRD_EQP_SEQ,
    CASE 
        WHEN tb_tipo_logradouro.nu_dne IS NULL THEN '081' 
        ELSE tb_tipo_logradouro.nu_dne 
    END AS PRD_LOGRAD_PCNTE,
    CASE 
        WHEN tb_cidadao.ds_cep IS NULL THEN '07400970'
        WHEN tb_cidadao.ds_cep IN ('07400000') THEN '07400970'
        ELSE tb_cidadao.ds_cep 
    END AS PRD_CEP_PCNTE,
    CASE
        WHEN tb_cidadao.ds_logradouro IS NULL THEN SUBSTRING('Avenida dos Expedicionarios',1,30)
        ELSE SUBSTRING(tb_cidadao.ds_logradouro,1,30) 
    END AS PRD_END_PCNTE,
    SUBSTRING(tb_cidadao.ds_complemento,1,10) AS PRD_COMPL_PCNTE,
    CASE
        WHEN tb_cidadao.nu_numero IS NULL THEN  SUBSTRING('S/N',1,5) 
        ELSE SUBSTRING(tb_cidadao.nu_numero,1,5) 
    END AS PRD_NUM_PCNTE,
    CASE WHEN tb_cidadao.no_bairro IS NULL THEN 'Centro' 
        ELSE SUBSTRING(tb_cidadao.no_bairro,1,30) 
    END AS PRD_BAIRRO_PCNTE,
    substring(tb_cidadao.nu_telefone_residencial, 1 , 2) AS PRD_DDTEL_PCNTE,
    substring(tb_cidadao.nu_telefone_residencial, 3 , 9) AS PRD_TEL_PCNTE,
    '' AS PRD_EMAIL_PCNTE,
    '' AS PRD_INE
FROM 
    public.tb_atend
LEFT JOIN 
    public.tb_status_atend ON tb_status_atend.co_status_atend = tb_atend.st_atend
LEFT JOIN 
    public.tb_unidade_saude ON tb_unidade_saude.co_seq_unidade_saude = tb_atend.co_unidade_saude
LEFT JOIN 
    public.tb_atend_prof ON tb_atend_prof.co_atend = tb_atend.co_seq_atend
LEFT JOIN 
    public.tb_lotacao ON tb_lotacao.co_ator_papel = tb_atend_prof.co_lotacao
LEFT JOIN 
    public.tb_prof ON tb_prof.co_seq_prof = tb_lotacao.co_prof
LEFT JOIN 
    public.tb_uf ON tb_uf.co_uf = tb_prof.co_uf_emissora_conselho_classe
LEFT JOIN 
    public.tb_conselho_classe ON tb_conselho_classe.co_conselho_classe = tb_prof.co_conselho_classe
LEFT JOIN 
    public.tb_cbo ON tb_cbo.co_cbo = tb_lotacao.co_cbo
LEFT JOIN 
    public.rl_atend_proced ON rl_atend_proced.co_atend_prof = tb_atend_prof.co_seq_atend_prof
INNER JOIN 
    public.tb_proced ON tb_proced.co_seq_proced = Rl_atend_proced.co_proced
LEFT JOIN 
    public.rl_evolucao_avaliacao_ciap_cid ON rl_evolucao_avaliacao_ciap_cid.co_atend_prof = tb_atend_prof.co_seq_atend_prof
LEFT JOIN 
    public.tb_cid10 ON tb_cid10.co_cid10 = rl_evolucao_avaliacao_ciap_cid.co_cid10
LEFT JOIN 
    public.tb_prontuario ON tb_prontuario.co_seq_prontuario = tb_atend.co_prontuario
LEFT JOIN 
    public.tb_cidadao ON tb_cidadao.co_seq_cidadao = tb_prontuario.co_cidadao
LEFT JOIN 
    public.tb_tipo_logradouro ON tb_tipo_logradouro.co_tipo_logradouro = tb_cidadao.tp_logradouro
LEFT JOIN 
    tb_localidade ON tb_localidade.co_localidade = tb_cidadao.co_localidade_endereco
LEFT JOIN 
    tb_uf pes_uf ON pes_uf.co_uf = tb_cidadao.co_uf
LEFT JOIN 
    tb_ciap tc ON rl_evolucao_avaliacao_ciap_cid.co_ciap = tc.co_seq_ciap 
WHERE 
    tb_unidade_saude.nu_cnes IN ('6896847', '6896839', '6628842', '0491381', '6430163')
    AND EXTRACT(YEAR FROM tb_atend.dt_inicio) = %(ano)s
    AND EXTRACT(MONTH FROM tb_atend.dt_inicio) = %(mes)s
    AND tb_proced.co_proced NOT IN ('ABPO015', 'ABPG040', 'ABPG039', 'ABPG038', 'ABPG034', 'ABEX022', 'ABEX013', 'ABEX012', 
                                    '0301100268', '0301100250', '0101040083', '0101040075')
GROUP BY 
    tb_unidade_saude.nu_cnes, tb_atend.dt_inicio, tb_prof.nu_cns, tb_cbo.co_cbo_2002, 
    tb_proced.co_proced, tb_proced.co_proced_filtro, tb_cidadao.nu_cns, tb_cidadao.no_cidadao,
    tb_cidadao.dt_nascimento, tb_cidadao.no_sexo, tb_localidade.co_ibge,
    tb_cidadao.co_raca_cor, tb_tipo_logradouro.nu_dne, tb_cidadao.ds_cep, tb_cidadao.ds_logradouro,
    tb_cidadao.ds_complemento, tb_cidadao.nu_numero, tb_cidadao.no_bairro, tb_cidadao.nu_telefone_residencial,
    tb_cidadao.nu_cpf
    UNION ALL
SELECT DISTINCT  
    tb_unidade_saude.nu_cnes as PRD_UID,
    CAST(EXTRACT(YEAR FROM tb_atend.dt_inicio) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM tb_atend.dt_inicio) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS varchar(6)) AS PRD_CMP,
    tb_prof.nu_cns AS PRD_CNSMED,
    tb_cbo.co_cbo_2002 AS PRD_CBO,
    '001' AS PRD_FLH,
    '1' AS PRD_SEQ,
    CASE
        WHEN tb_proced.co_proced LIKE 'A%%' THEN SUBSTRING(tb_proced.co_proced_filtro, 9,10)
        ELSE tb_proced.co_proced
    END AS prd_pa,
    CASE 
        WHEN tb_cidadao.nu_cns IS NOT NULL THEN tb_cidadao.nu_cns 
        ELSE '' 
    END AS PRD_CNSPAC,
    CASE 
        WHEN tb_cidadao.nu_cns IS NULL THEN tb_cidadao.nu_cpf 
        ELSE '' 
    END AS PRD_CPF_PCNTE,
    SUBSTRING(tb_cidadao.no_cidadao, 1,30) AS PRD_NMPAC,
    EXTRACT(YEAR FROM tb_cidadao.dt_nascimento) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM tb_cidadao.dt_nascimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) || 
        CAST(LPAD(CAST(EXTRACT(DAY FROM tb_cidadao.dt_nascimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_DTNASC,
    CASE
        WHEN tb_cidadao.no_sexo = 'FEMININO' THEN 'F'
        ELSE 'M'
    END AS PRD_SEXO,
    CASE 
        WHEN tb_localidade.co_ibge IS NULL THEN '350390' 
        ELSE SUBSTRING(tb_localidade.co_ibge,1,6) 
    END AS PRD_IBGE,
    EXTRACT(YEAR FROM tb_atend.dt_inicio) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM tb_atend.dt_inicio) AS varchar(2)), 2, '0') AS VARCHAR(2)) || 
        CAST(LPAD(CAST(EXTRACT(DAY FROM tb_atend.dt_inicio) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_DTATEN,
    LEFT(string_agg(cast(TB_CID10.nu_cid10 AS varchar(4)), '  '), 4) AS PRD_CID,
    CAST(LPAD(CAST(EXTRACT(year FROM age(tb_cidadao.dt_nascimento)) AS varchar(3)), 3, '0') AS VARCHAR(3)) AS PRD_IDADE,
    000001 AS PRD_QT_P,
    '01' AS PRD_CATEN,
    '' AS PRD_NAUT,
    'BPI' AS PRD_ORG,
    EXTRACT(YEAR FROM tb_atend.dt_inicio) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM tb_atend.dt_inicio) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_MVM,
    '0' AS PRD_FLPA,
    '0' AS PRD_FLCBO,
    '0' AS PRD_FLCA,
    '0' AS PRD_FLIDA,
    '0' AS PRD_FLQT,
    '0' AS PRD_FLER,
    '0' AS PRD_FLMUN,
    '0' AS PRD_FLCID,
    CASE 
        WHEN tb_cidadao.co_raca_cor = '1' THEN '01'
        WHEN tb_cidadao.co_raca_cor = '2' THEN '02'           
        WHEN tb_cidadao.co_raca_cor = '3' THEN '04'           
        WHEN tb_cidadao.co_raca_cor = '4' THEN '03'           
        WHEN tb_cidadao.co_raca_cor = '5' THEN '05'           
        WHEN tb_cidadao.co_raca_cor = '6' THEN '03'     
        ELSE LPAD(CAST(tb_cidadao.co_raca_cor AS VARCHAR(2)), 2, '0')
    END AS PRD_RACA,
    '' AS PRD_SERVICO,
    '' AS PRD_CLASSIFICACAO,
    '' AS PRD_ETNIA,
    '010' AS PRD_NAC,
    '00' AS PRD_ADVQT,
    '' AS PRD_CNPJ,
    '' AS PRD_EQP_AREA,
    '' AS PRD_EQP_SEQ,
    CASE 
        WHEN tb_tipo_logradouro.nu_dne IS NULL THEN '081' 
        ELSE tb_tipo_logradouro.nu_dne 
    END AS PRD_LOGRAD_PCNTE,
    CASE 
        WHEN tb_cidadao.ds_cep IS NULL THEN '07400970'
        WHEN tb_cidadao.ds_cep IN ('07400000') THEN '07400970'
        ELSE tb_cidadao.ds_cep 
    END AS PRD_CEP_PCNTE,
    CASE
        WHEN tb_cidadao.ds_logradouro IS NULL THEN SUBSTRING('A',1,30)
        ELSE SUBSTRING(tb_cidadao.ds_logradouro,1,30) 
    END AS PRD_END_PCNTE,
    SUBSTRING(tb_cidadao.ds_complemento,1,10) AS PRD_COMPL_PCNTE,
    CASE
        WHEN tb_cidadao.nu_numero IS NULL THEN  SUBSTRING('S/N',1,5) 
        ELSE SUBSTRING(tb_cidadao.nu_numero,1,5) 
    END AS PRD_NUM_PCNTE,
    CASE WHEN tb_cidadao.no_bairro IS NULL THEN 'Centro' 
        ELSE SUBSTRING(tb_cidadao.no_bairro,1,30) 
    END AS PRD_BAIRRO_PCNTE,
    substring(tb_cidadao.nu_telefone_residencial, 1 , 2) AS PRD_DDTEL_PCNTE,
    substring(tb_cidadao.nu_telefone_residencial, 3 , 9) AS PRD_TEL_PCNTE,
    '' AS PRD_EMAIL_PCNTE,
    '' AS PRD_INE
FROM 
    public.tb_atend
LEFT JOIN 
    public.tb_status_atend ON tb_status_atend.co_status_atend = tb_atend.st_atend
LEFT JOIN 
    public.tb_unidade_saude ON tb_unidade_saude.co_seq_unidade_saude = tb_atend.co_unidade_saude
LEFT JOIN 
    public.tb_atend_prof ON tb_atend_prof.co_atend = tb_atend.co_seq_atend
LEFT JOIN 
    public.tb_lotacao ON tb_lotacao.co_ator_papel = tb_atend_prof.co_lotacao
LEFT JOIN 
    public.tb_prof ON tb_prof.co_seq_prof = tb_lotacao.co_prof
LEFT JOIN 
    public.tb_uf ON tb_uf.co_uf = tb_prof.co_uf_emissora_conselho_classe
LEFT JOIN 
    public.tb_conselho_classe ON tb_conselho_classe.co_conselho_classe = tb_prof.co_conselho_classe
LEFT JOIN 
    public.tb_cbo ON tb_cbo.co_cbo = tb_lotacao.co_cbo
LEFT JOIN 
    rl_evolucao_plano_ciap ON rl_evolucao_plano_ciap.co_atend_prof = tb_atend_prof.co_seq_atend_prof
INNER JOIN 
    tb_proced ON tb_proced.co_seq_proced = rl_evolucao_plano_ciap.co_proced
LEFT JOIN 
    public.rl_evolucao_avaliacao_ciap_cid ON rl_evolucao_avaliacao_ciap_cid.co_atend_prof = tb_atend_prof.co_seq_atend_prof
LEFT JOIN 
    public.tb_cid10 ON tb_cid10.co_cid10 = rl_evolucao_avaliacao_ciap_cid.co_cid10
LEFT JOIN 
    public.tb_prontuario ON tb_prontuario.co_seq_prontuario = tb_atend.co_prontuario
LEFT JOIN 
    public.tb_cidadao ON tb_cidadao.co_seq_cidadao = tb_prontuario.co_cidadao
LEFT JOIN 
    public.tb_tipo_logradouro ON tb_tipo_logradouro.co_tipo_logradouro = tb_cidadao.tp_logradouro
LEFT JOIN 
    tb_localidade ON tb_localidade.co_localidade = tb_cidadao.co_localidade_endereco
LEFT JOIN 
    tb_uf pes_uf ON pes_uf.co_uf = tb_cidadao.co_uf
LEFT JOIN 
    tb_ciap tc ON rl_evolucao_avaliacao_ciap_cid.co_ciap = tc.co_seq_ciap 
WHERE 
    tb_unidade_saude.nu_cnes IN ('6896847', '6896839', '6628842', '0491381', '6430163')
    AND EXTRACT(YEAR FROM tb_atend.dt_inicio) = %(ano)s
    AND EXTRACT(MONTH FROM tb_atend.dt_inicio) = %(mes)s  
    AND tb_proced.co_proced NOT IN ('ABPO015', 'ABPG040', 'ABPG039', 'ABPG038', 'ABPG034', 'ABEX022', 'ABEX013', 'ABEX012', 
                                    '0301100268', '0301100250', '0101040083', '0101040075')
GROUP BY 
    tb_unidade_saude.nu_cnes, tb_atend.dt_inicio, tb_prof.nu_cns, tb_cbo.co_cbo_2002, 
    tb_proced.co_proced, tb_proced.co_proced_filtro, tb_cidadao.nu_cns, tb_cidadao.no_cidadao,
    tb_cidadao.dt_nascimento, tb_cidadao.no_sexo, tb_localidade.co_ibge,
    tb_cidadao.co_raca_cor, tb_tipo_logradouro.nu_dne, tb_cidadao.ds_cep, tb_cidadao.ds_logradouro,
    tb_cidadao.ds_complemento, tb_cidadao.nu_numero, tb_cidadao.no_bairro, tb_cidadao.nu_telefone_residencial,
    tb_cidadao.nu_cpf
UNION ALL
SELECT DISTINCT  
    tb_dim_unidade_saude.nu_cnes as PRD_UID,
    CAST(EXTRACT(YEAR FROM tb_fat_proced_atend.dt_inicial_atendimento) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM tb_fat_proced_atend.dt_inicial_atendimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS varchar(6)) AS PRD_CMP,
    tb_dim_profissional.nu_cns AS PRD_CNSMED,
    tb_dim_cbo.nu_cbo AS PRD_CBO,
    '001' AS PRD_FLH,
    '1' AS PRD_SEQ,    
    CASE 
        WHEN tb_dim_procedimento.co_proced IN ('ABEX004') THEN '0211020036'    
        WHEN tb_dim_procedimento.co_proced IN ('ABPG001') THEN '0309050022'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG002') THEN '0101040059'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG003') THEN '0301100047'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG004') THEN '0303080019'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG005') THEN '0401020177'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG006') THEN '0301100063'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG007') THEN '0301100276'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG008') THEN '0401010031'
        WHEN tb_dim_procedimento.co_proced IN ('ABEX004') THEN '0211020036'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG010') THEN '0201020033'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG012') THEN '0401010074'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG013') THEN '0211060100'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG014') THEN '0303090030'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG015') THEN '0404010300'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG016') THEN '0401010112'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG017') THEN '0404010270'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG018') THEN '0301100152'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG019') THEN '0401010066'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG020') THEN '0211060275' 
        WHEN tb_dim_procedimento.co_proced IN ('ABPG021') THEN '0404010342'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG022') THEN '0214010066'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG024') THEN '0214010058'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG025') THEN '0214010090'
        WHEN tb_dim_procedimento.co_proced IN ('ABEX026') THEN '0202010473'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG026') THEN '0214010074'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG027') THEN '0301100217'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG028') THEN '0301100209'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG029') THEN '0301100195'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG030') THEN '0301100101'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG031') THEN '0301100233'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG032') THEN '0301100241'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG033') THEN '0301100039'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG040') THEN '0214010155'
        WHEN tb_dim_procedimento.co_proced IN ('ABPG041') THEN '0301100225'
        ELSE tb_dim_procedimento.co_proced 
    END AS prd_pa,
    CASE 
        WHEN tb_cidadao.nu_cns IS NOT NULL THEN tb_cidadao.nu_cns 
        ELSE '' 
    END AS PRD_CNSPAC,
    CASE 
        WHEN tb_cidadao.nu_cns IS NULL THEN tb_cidadao.nu_cpf 
        ELSE '' 
    END AS PRD_CPF_PCNTE,
    SUBSTRING(tb_cidadao.no_cidadao, 1,30) AS PRD_NMPAC,
    EXTRACT(YEAR FROM tb_cidadao.dt_nascimento) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM tb_cidadao.dt_nascimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) || 
        CAST(LPAD(CAST(EXTRACT(DAY FROM tb_cidadao.dt_nascimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_DTNASC,
    CASE
        WHEN tb_cidadao.no_sexo = 'FEMININO' THEN 'F'
        ELSE 'M'
    END AS PRD_SEXO,
    CASE 
        WHEN tb_dim_municipio.co_ibge IS NULL THEN '350390' 
        ELSE SUBSTRING(tb_dim_municipio.co_ibge,1,6) 
    END AS PRD_IBGE,
    EXTRACT(YEAR FROM tb_fat_proced_atend.dt_inicial_atendimento) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM tb_fat_proced_atend.dt_inicial_atendimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) || 
        CAST(LPAD(CAST(EXTRACT(DAY FROM tb_fat_proced_atend.dt_inicial_atendimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_DTATEN,
    '0' AS PRD_CID,
    CAST(LPAD(CAST(EXTRACT(year FROM age(tb_cidadao.dt_nascimento)) AS varchar(3)), 3, '0') AS VARCHAR(3)) AS PRD_IDADE,
    000001 AS PRD_QT_P,
    '01' AS PRD_CATEN,
    '' AS PRD_NAUT,
    'BPI' AS PRD_ORG,
    EXTRACT(YEAR FROM tb_fat_proced_atend.dt_inicial_atendimento) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM tb_fat_proced_atend.dt_inicial_atendimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_MVM,
    '0' AS PRD_FLPA,
    '0' AS PRD_FLCBO,
    '0' AS PRD_FLCA,
    '0' AS PRD_FLIDA,
    '0' AS PRD_FLQT,
    '0' AS PRD_FLER,
    '0' AS PRD_FLMUN,
    '0' AS PRD_FLCID,
    CASE 
        WHEN tb_cidadao.co_raca_cor = '1' THEN '01'
        WHEN tb_cidadao.co_raca_cor = '2' THEN '02'           
        WHEN tb_cidadao.co_raca_cor = '3' THEN '04'           
        WHEN tb_cidadao.co_raca_cor = '4' THEN '03'           
        WHEN tb_cidadao.co_raca_cor = '5' THEN '05'           
        WHEN tb_cidadao.co_raca_cor = '6' THEN '03'     
        ELSE LPAD(CAST(tb_cidadao.co_raca_cor AS VARCHAR(2)), 2, '0')
    END AS PRD_RACA,
    '' AS PRD_SERVICO,
    '' AS PRD_CLASSIFICACAO,
    '' AS PRD_ETNIA,
    '010' AS PRD_NAC,
    '00' AS PRD_ADVQT,
    '' AS PRD_CNPJ,
    '' AS PRD_EQP_AREA,
    '' AS PRD_EQP_SEQ,
    '081' AS PRD_LOGRAD_PCNTE,
    CASE 
        WHEN tb_cidadao.ds_cep IS NULL THEN '07400970'
        WHEN tb_cidadao.ds_cep IN ('07400000') THEN '07400970'
        ELSE tb_cidadao.ds_cep 
    END AS PRD_CEP_PCNTE,
    CASE
        WHEN tb_cidadao.ds_logradouro IS NULL THEN SUBSTRING('Avenida dos Expedicionarios',1,30)
        ELSE SUBSTRING(tb_cidadao.ds_logradouro,1,30) 
    END AS PRD_END_PCNTE,
    SUBSTRING(tb_cidadao.ds_complemento,1,10) AS PRD_COMPL_PCNTE,
    CASE
        WHEN tb_cidadao.nu_numero IS NULL THEN  SUBSTRING('S/N',1,5) 
        ELSE SUBSTRING(tb_cidadao.nu_numero,1,5) 
    END AS PRD_NUM_PCNTE,
    CASE WHEN tb_cidadao.no_bairro IS NULL THEN 'Centro' 
        ELSE SUBSTRING(tb_cidadao.no_bairro,1,30) 
    END AS PRD_BAIRRO_PCNTE,
    substring(tb_cidadao.nu_telefone_residencial, 1 , 2) AS PRD_DDTEL_PCNTE,
    substring(tb_cidadao.nu_telefone_residencial, 3 , 9) AS PRD_TEL_PCNTE,
    '' AS PRD_EMAIL_PCNTE,
    '' AS PRD_INE     
FROM 
    tb_fat_proced_atend
RIGHT JOIN 
    tb_fat_proced_atend_proced tb_fat_proced_atend_proced ON tb_fat_proced_atend_proced.co_fat_procedimento = tb_fat_proced_atend.co_fat_procedimento 
    AND tb_fat_proced_atend_proced.nu_atendimento = tb_fat_proced_atend.nu_atendimento
LEFT JOIN 
    tb_dim_procedimento p1 ON p1.co_seq_dim_procedimento = tb_fat_proced_atend_proced.co_dim_procedimento
LEFT JOIN 
    tb_dim_procedimento p2 ON p2.co_seq_dim_procedimento = p2.co_seq_dim_proced_ref_ab
INNER JOIN 
    tb_fat_cidadao_pec ON tb_fat_cidadao_pec.co_seq_fat_cidadao_pec = tb_fat_proced_atend.co_fat_cidadao_pec
LEFT JOIN 
    tb_prontuario ON tb_prontuario.co_cidadao = tb_fat_cidadao_pec.co_cidadao
LEFT JOIN 
    tb_cidadao ON tb_cidadao.co_seq_cidadao = tb_prontuario.co_cidadao  
LEFT JOIN 
    tb_fat_cidadao_pec AS Fatcid ON Fatcid.nu_cns = tb_cidadao.nu_cns
LEFT JOIN 
    tb_cidadao_grupo ON tb_cidadao_grupo.co_cidadao = tb_fat_cidadao_pec.co_cidadao  
INNER JOIN 
    tb_dim_procedimento ON tb_dim_procedimento.co_seq_dim_procedimento = tb_fat_proced_atend_proced.co_dim_procedimento
INNER JOIN 
    tb_dim_profissional ON tb_dim_profissional.co_seq_dim_profissional = tb_fat_proced_atend_proced.co_dim_profissional
INNER JOIN 
    tb_dim_tipo_origem ON tb_dim_tipo_origem.co_seq_dim_tipo_origem = tb_fat_proced_atend_proced.co_dim_cds_tipo_origem
INNER JOIN 
    tb_dim_local_atendimento ON tb_dim_local_atendimento.co_seq_dim_local_atendimento = tb_fat_proced_atend_proced.co_dim_local_atendimento
INNER JOIN 
    tb_dim_cbo ON tb_dim_cbo.co_seq_dim_cbo = tb_fat_proced_atend_proced.co_dim_cbo
INNER JOIN 
    tb_dim_unidade_saude ON tb_dim_unidade_saude.co_seq_dim_unidade_saude = tb_fat_proced_atend_proced.co_dim_unidade_saude
INNER JOIN 
    tb_dim_sexo ON tb_dim_sexo.co_seq_dim_sexo = tb_fat_proced_atend_proced.co_dim_sexo
INNER JOIN 
    tb_dim_tipo_ficha ON tb_dim_tipo_ficha.co_seq_dim_tipo_ficha = tb_fat_proced_atend_proced.co_dim_tipo_ficha
INNER JOIN 
    tb_dim_equipe ON tb_dim_equipe.co_seq_dim_equipe = tb_fat_proced_atend_proced.co_dim_equipe
INNER JOIN 
    tb_dim_faixa_etaria ON tb_dim_faixa_etaria.co_seq_dim_faixa_etaria = tb_fat_proced_atend.co_dim_faixa_etaria
INNER JOIN 
    tb_dim_tempo ON tb_dim_tempo.co_seq_dim_tempo = tb_fat_proced_atend_proced.co_dim_tempo
INNER JOIN 
    tb_dim_municipio ON tb_dim_municipio.co_seq_dim_municipio = tb_fat_proced_atend_proced.co_dim_municipio
INNER JOIN 
    tb_dim_turno ON tb_dim_turno.co_seq_dim_turno = tb_fat_proced_atend_proced.co_dim_turno
INNER JOIN 
    tb_dim_tipo_origem_dado_transp ON tb_dim_tipo_origem_dado_transp.co_seq_dim_tp_orgm_dado_transp = tb_fat_proced_atend_proced.co_dim_tipo_origem_dado_transp 
WHERE 
    tb_dim_unidade_saude.nu_cnes IN ('6896847', '6896839', '6628842', '0491381', '6430163')
    AND EXTRACT(YEAR FROM tb_fat_proced_atend.dt_inicial_atendimento) = %(ano)s
    AND EXTRACT(MONTH FROM tb_fat_proced_atend.dt_inicial_atendimento) = %(mes)s
    AND tb_dim_procedimento.co_proced NOT IN ('0301080020','0211020079','0301100209','0301100195',
                                              '0301100217','0301100225','ABPO015','ABPG040','ABPG039','ABPG038','ABPG034',
                                              'ABEX022','ABEX013','ABEX012','0301100268','0301100250','0101040083',
                                              '0101040075')
    AND tb_dim_tipo_ficha.nu_identificador = '7'
UNION ALL
SELECT DISTINCT
    unidade.nu_cnes AS PRD_UID,
    CAST(EXTRACT(YEAR FROM atend.dt_final_atendimento) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM atend.dt_final_atendimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS VARCHAR(6)) AS PRD_CMP,
    Prof.nu_cns AS PRD_CNSMED,
    cbo.nu_cbo AS PRD_CBO,
    '001' AS PRD_FLH,
    '1' AS PRD_SEQ,
    UNNEST(REGEXP_MATCHES(fat_proced_atend.ds_filtro_procedimento, '[^\|]+', 'g')) AS PRD_PA,
    CASE 
        WHEN cid.nu_cns IS NOT NULL THEN cid.nu_cns 
        ELSE '' 
    END AS PRD_CNSPAC,
    CASE 
        WHEN cid.nu_cns IS NULL THEN cid.nu_cpf 
        ELSE '' 
    END AS PRD_CPF_PCNTE,
    SUBSTRING(cid.no_cidadao, 1,30) AS PRD_NMPAC,
    EXTRACT(YEAR FROM cid.dt_nascimento) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM cid.dt_nascimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) || 
        CAST(LPAD(CAST(EXTRACT(DAY FROM cid.dt_nascimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_DTNASC,
    CASE
        WHEN cid.no_sexo = 'FEMININO' THEN 'F'
        ELSE 'M'
    END AS PRD_SEXO,
    CASE 
        WHEN tb_localidade.co_ibge IS NULL THEN '350390' 
        ELSE SUBSTRING(tb_localidade.co_ibge,1,6) 
    END AS PRD_IBGE,
    EXTRACT(YEAR FROM atend.dt_inicial_atendimento) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM atend.dt_inicial_atendimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) || 
        CAST(LPAD(CAST(EXTRACT(DAY FROM atend.dt_inicial_atendimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_DTATEN,
    CASE 
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302070036%%' THEN 'T951'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302010025%%' THEN 'N319'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302070010%%' THEN 'T302'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302060057%%' THEN 'S141'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302060030%%' THEN 'G838'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302060014%%' THEN 'I694'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302050027%%' THEN 'M255'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302050019%%' THEN 'T932'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302040056%%' THEN 'I988'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302040030%%' THEN 'Q048'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302040021%%' THEN 'J998'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302060022%%' THEN 'I694'       
        ELSE REPLACE(atend.ds_filtro_cids, '|', '')
    END AS PRD_CID,
    CAST(LPAD(CAST(EXTRACT(YEAR FROM age(cid.dt_nascimento)) AS varchar(3)), 3, '0') AS VARCHAR(3)) AS PRD_IDADE,
    000001 AS PRD_QT_P,
    '01' AS PRD_CATEN,
    '' AS PRD_NAUT,
    'BPI' AS PRD_ORG,
    EXTRACT(YEAR FROM atend.dt_inicial_atendimento) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM atend.dt_inicial_atendimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_MVM,
    '0' AS PRD_FLPA,
    '0' AS PRD_FLCBO,
    '0' AS PRD_FLCA,
    '0' AS PRD_FLIDA,
    '0' AS PRD_FLQT,
    '0' AS PRD_FLER,
    '0' AS PRD_FLMUN,
    '0' AS PRD_FLCID,
    CASE 
        WHEN cid.co_raca_cor = '1' THEN '01'
        WHEN cid.co_raca_cor = '2' THEN '02'           
        WHEN cid.co_raca_cor = '3' THEN '04'           
        WHEN cid.co_raca_cor = '4' THEN '03'           
        WHEN cid.co_raca_cor = '5' THEN '05'           
        WHEN cid.co_raca_cor = '6' THEN '03'     
        ELSE LPAD(CAST(cid.co_raca_cor AS VARCHAR(2)), 2, '0')
    END AS PRD_RACA,
    '' AS PRD_SERVICO,
    '' AS PRD_CLASSIFICACAO,
    '' AS PRD_ETNIA,
    '010' AS PRD_NAC,
    '00' AS PRD_ADVQT,
    '' AS PRD_CNPJ,
    '' AS PRD_EQP_AREA,
    '' AS PRD_EQP_SEQ,
    CASE 
        WHEN tb_tipo_logradouro.nu_dne IS NULL THEN '081' 
        ELSE tb_tipo_logradouro.nu_dne 
    END AS PRD_LOGRAD_PCNTE,
    CASE 
        WHEN cid.ds_cep IS NULL THEN '07400970'
        WHEN cid.ds_cep IN ('07400000') THEN '07400970'
        ELSE cid.ds_cep 
    END AS PRD_CEP_PCNTE,
    CASE
        WHEN cid.ds_logradouro IS NULL THEN SUBSTRING('Avenida dos Expedicionarios',1,30)
        ELSE SUBSTRING(cid.ds_logradouro,1,30) 
    END AS PRD_END_PCNTE,
    SUBSTRING(cid.ds_complemento,1,10) AS PRD_COMPL_PCNTE,
    CASE
        WHEN cid.nu_numero IS NULL THEN  SUBSTRING('S/N',1,5) 
        ELSE SUBSTRING(cid.nu_numero,1,5) 
    END AS PRD_NUM_PCNTE,
    CASE WHEN cid.no_bairro IS NULL THEN 'Centro' 
        ELSE SUBSTRING(cid.no_bairro,1,30) 
    END AS PRD_BAIRRO_PCNTE,
    SUBSTRING(cid.nu_telefone_residencial, 1 , 2) AS PRD_DDTEL_PCNTE,
    SUBSTRING(cid.nu_telefone_residencial, 3 , 9) AS PRD_TEL_PCNTE,
    '' AS PRD_EMAIL_PCNTE,
    '' AS PRD_INE 
FROM 
    tb_fat_atendimento_individual atend
INNER JOIN 
    tb_dim_municipio tb_localidade ON atend.co_dim_municipio = tb_localidade.co_seq_dim_municipio
INNER JOIN 
    tb_dim_uf dimensaouf2_ ON tb_localidade.co_dim_uf = dimensaouf2_.co_seq_dim_uf
INNER JOIN 
    tb_dim_unidade_saude unidade ON atend.co_dim_unidade_saude_1 = unidade.co_seq_dim_unidade_saude
INNER JOIN 
    tb_dim_equipe dimensaoeq4_ ON atend.co_dim_equipe_1 = dimensaoeq4_.co_seq_dim_equipe
INNER JOIN 
    tb_dim_profissional Prof ON atend.co_dim_profissional_1 = Prof.co_seq_dim_profissional
INNER JOIN 
    tb_dim_tipo_atendimento dimtipoate6_ ON atend.co_dim_tipo_atendimento = dimtipoate6_.co_seq_dim_tipo_atendimento
INNER JOIN 
    tb_dim_sexo dimensaose7_ ON atend.co_dim_sexo = dimensaose7_.co_seq_dim_sexo
INNER JOIN 
    tb_dim_tipo_origem dimensaoti8_ ON atend.co_dim_cds_tipo_origem = dimensaoti8_.co_seq_dim_tipo_origem
INNER JOIN 
    tb_dim_turno dimensaotu9_ ON atend.co_dim_turno = dimensaotu9_.co_seq_dim_turno
INNER JOIN 
    tb_dim_cbo cbo ON atend.co_dim_cbo_1 = cbo.co_seq_dim_cbo
INNER JOIN 
    tb_fat_proced_atend fat_proced_atend ON atend.nu_uuid_ficha = fat_proced_atend.nu_uuid_ficha
INNER JOIN    
	tb_fat_cidadao_pec tfcp ON atend.co_fat_cidadao_pec = tfcp.co_seq_fat_cidadao_pec
INNER JOIN
    tb_cidadao cid ON tfcp.co_cidadao = cid.co_seq_cidadao
JOIN
    public.tb_tipo_logradouro ON tb_tipo_logradouro.co_tipo_logradouro = cid.tp_logradouro
WHERE 
TO_CHAR(TO_DATE(atend.co_dim_tempo::text, 'YYYYMMDD'), 'YYYY') = %(ano)s
AND TO_CHAR(TO_DATE(atend.co_dim_tempo::text, 'YYYYMMDD'), 'MM') = %(mes)s
    AND unidade.nu_cnes = '4565703'
    AND (dimtipoate6_.co_seq_dim_tipo_atendimento <> '5'AND
  fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%ABPO015%%' 
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%ABPG010%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%ABPG012%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%ABPG040%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%ABPG039%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%ABPG038%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%ABPG034%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%ABEX022%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%ABEX013%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%ABEX012%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%0301100268%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%0301100250%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%0101040083%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%0101040075%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%0301010064%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%ABPG025%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%ABPG024%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%0301010030%%'
    AND fat_proced_atend.ds_filtro_procedimento NOT LIKE '%%0301010129%%')
    UNION ALL 
    SELECT DISTINCT
    unidade.nu_cnes AS PRD_UID,
    CAST(EXTRACT(YEAR FROM atend.dt_final_atendimento) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM atend.dt_final_atendimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS VARCHAR(6)) AS PRD_CMP,
    Prof.nu_cns AS PRD_CNSMED,
    cbo.nu_cbo AS PRD_CBO,
    '001' AS PRD_FLH,
    '1' AS PRD_SEQ,
    UNNEST(REGEXP_MATCHES(fat_proced_atend.ds_filtro_procedimento, '[^\|]+', 'g')) AS PRD_PA,
    CASE 
        WHEN cid.nu_cns IS NOT NULL THEN cid.nu_cns 
        ELSE '' 
    END AS PRD_CNSPAC,
    CASE 
        WHEN cid.nu_cns IS NULL THEN cid.nu_cpf 
        ELSE '' 
    END AS PRD_CPF_PCNTE,
    SUBSTRING(cid.no_cidadao, 1,30) AS PRD_NMPAC,
    EXTRACT(YEAR FROM cid.dt_nascimento) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM cid.dt_nascimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) || 
        CAST(LPAD(CAST(EXTRACT(DAY FROM cid.dt_nascimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_DTNASC,
    CASE
        WHEN cid.no_sexo = 'FEMININO' THEN 'F'
        ELSE 'M'
    END AS PRD_SEXO,
    CASE 
        WHEN tb_localidade.co_ibge IS NULL THEN '350390' 
        ELSE SUBSTRING(tb_localidade.co_ibge,1,6) 
    END AS PRD_IBGE,
    EXTRACT(YEAR FROM atend.dt_inicial_atendimento) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM atend.dt_inicial_atendimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) || 
        CAST(LPAD(CAST(EXTRACT(DAY FROM atend.dt_inicial_atendimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_DTATEN,
    CASE 
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302070036%%' THEN 'T951'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302010025%%' THEN 'N319'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302070010%%' THEN 'T302'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302060057%%' THEN 'S141'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302060030%%' THEN 'G838'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302060014%%' THEN 'I694'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302050027%%' THEN 'M255'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302050019%%' THEN 'T932'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302040056%%' THEN 'I988'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302040030%%' THEN 'Q048'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302040021%%' THEN 'J998'
        WHEN fat_proced_atend.ds_filtro_procedimento LIKE '%%0302060022%%' THEN 'I694'       
        ELSE REPLACE(atend.ds_filtro_cids, '|', '')
    END AS PRD_CID,
    CAST(LPAD(CAST(EXTRACT(YEAR FROM age(cid.dt_nascimento)) AS varchar(3)), 3, '0') AS VARCHAR(3)) AS PRD_IDADE,
    000001 AS PRD_QT_P,
    '01' AS PRD_CATEN,
    '' AS PRD_NAUT,
    'BPI' AS PRD_ORG,
    EXTRACT(YEAR FROM atend.dt_inicial_atendimento) || 
        CAST(LPAD(CAST(EXTRACT(MONTH FROM atend.dt_inicial_atendimento) AS varchar(2)), 2, '0') AS VARCHAR(2)) AS PRD_MVM,
    '0' AS PRD_FLPA,
    '0' AS PRD_FLCBO,
    '0' AS PRD_FLCA,
    '0' AS PRD_FLIDA,
    '0' AS PRD_FLQT,
    '0' AS PRD_FLER,
    '0' AS PRD_FLMUN,
    '0' AS PRD_FLCID,
    CASE 
        WHEN cid.co_raca_cor = '1' THEN '01'
        WHEN cid.co_raca_cor = '2' THEN '02'           
        WHEN cid.co_raca_cor = '3' THEN '04'           
        WHEN cid.co_raca_cor = '4' THEN '03'           
        WHEN cid.co_raca_cor = '5' THEN '05'           
        WHEN cid.co_raca_cor = '6' THEN '03'     
        ELSE LPAD(CAST(cid.co_raca_cor AS VARCHAR(2)), 2, '0')
    END AS PRD_RACA,
    '' AS PRD_SERVICO,
    '' AS PRD_CLASSIFICACAO,
    '' AS PRD_ETNIA,
    '010' AS PRD_NAC,
    '00' AS PRD_ADVQT,
    '' AS PRD_CNPJ,
    '' AS PRD_EQP_AREA,
    '' AS PRD_EQP_SEQ,
    CASE 
        WHEN tb_tipo_logradouro.nu_dne IS NULL THEN '081' 
        ELSE tb_tipo_logradouro.nu_dne 
    END AS PRD_LOGRAD_PCNTE,
    CASE 
        WHEN cid.ds_cep IS NULL THEN '07400970'
        WHEN cid.ds_cep IN ('07400000') THEN '07400970'
        ELSE cid.ds_cep 
    END AS PRD_CEP_PCNTE,
    CASE
        WHEN cid.ds_logradouro IS NULL THEN SUBSTRING('Avenida dos Expedicionarios',1,30)
        ELSE SUBSTRING(cid.ds_logradouro,1,30) 
    END AS PRD_END_PCNTE,
    SUBSTRING(cid.ds_complemento,1,10) AS PRD_COMPL_PCNTE,
    CASE
        WHEN cid.nu_numero IS NULL THEN  SUBSTRING('S/N',1,5) 
        ELSE SUBSTRING(cid.nu_numero,1,5) 
    END AS PRD_NUM_PCNTE,
    CASE WHEN cid.no_bairro IS NULL THEN 'Centro' 
        ELSE SUBSTRING(cid.no_bairro,1,30) 
    END AS PRD_BAIRRO_PCNTE,
    SUBSTRING(cid.nu_telefone_residencial, 1 , 2) AS PRD_DDTEL_PCNTE,
    SUBSTRING(cid.nu_telefone_residencial, 3 , 9) AS PRD_TEL_PCNTE,
    '' AS PRD_EMAIL_PCNTE,
    '' AS PRD_INE 
FROM 
    tb_fat_atendimento_individual atend
INNER JOIN 
    tb_dim_municipio tb_localidade ON atend.co_dim_municipio = tb_localidade.co_seq_dim_municipio
INNER JOIN 
    tb_dim_uf dimensaouf2_ ON tb_localidade.co_dim_uf = dimensaouf2_.co_seq_dim_uf
INNER JOIN 
    tb_dim_unidade_saude unidade ON atend.co_dim_unidade_saude_1 = unidade.co_seq_dim_unidade_saude
INNER JOIN 
    tb_dim_equipe dimensaoeq4_ ON atend.co_dim_equipe_1 = dimensaoeq4_.co_seq_dim_equipe
INNER JOIN 
    tb_dim_profissional Prof ON atend.co_dim_profissional_1 = Prof.co_seq_dim_profissional
INNER JOIN 
    tb_dim_tipo_atendimento dimtipoate6_ ON atend.co_dim_tipo_atendimento = dimtipoate6_.co_seq_dim_tipo_atendimento
INNER JOIN 
    tb_dim_sexo dimensaose7_ ON atend.co_dim_sexo = dimensaose7_.co_seq_dim_sexo
INNER JOIN 
    tb_dim_tipo_origem dimensaoti8_ ON atend.co_dim_cds_tipo_origem = dimensaoti8_.co_seq_dim_tipo_origem
INNER JOIN 
    tb_dim_turno dimensaotu9_ ON atend.co_dim_turno = dimensaotu9_.co_seq_dim_turno
INNER JOIN 
    tb_dim_cbo cbo ON atend.co_dim_cbo_1 = cbo.co_seq_dim_cbo
INNER JOIN 
    tb_fat_proced_atend fat_proced_atend ON atend.nu_uuid_ficha = fat_proced_atend.nu_uuid_ficha
INNER JOIN    
	tb_fat_cidadao_pec tfcp ON atend.co_fat_cidadao_pec = tfcp.co_seq_fat_cidadao_pec
INNER JOIN
    tb_cidadao cid ON tfcp.co_cidadao = cid.co_seq_cidadao
JOIN
    public.tb_tipo_logradouro ON tb_tipo_logradouro.co_tipo_logradouro = cid.tp_logradouro
WHERE 
unidade.nu_cnes = '9001808' and cbo.nu_cbo like '225310'and  
	TO_CHAR(TO_DATE(atend.co_dim_tempo::text, 'YYYYMMDD'), 'YYYY') = %(ano)s
	AND TO_CHAR(TO_DATE(atend.co_dim_tempo::text, 'YYYYMMDD'), 'MM') = %(mes)s
    AND (fat_proced_atend.ds_filtro_procedimento like '%%0209010037%%'
    or fat_proced_atend.ds_filtro_procedimento like '%%0209010029%%'
    or fat_proced_atend.ds_filtro_procedimento like '%%0209010053%%')
    ORDER BY 9,13) as total_count]
[parameters: {'ano': 'None', 'mes': None}]
(Background on this error at: https://sqlalche.me/e/20/9h9h)
Sessão fechada para query_3 e bpa.
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=2024, mes=08, tipo=bpa
Sessão fechada para query_3 e bpa.
Execução de query_3 para bpa concluída.
Sessão fechada para query_2 e visitas.
Execução de query_2 para visitas concluída.
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=2024, mes=08, tipo=bpa
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=2024, mes=08, tipo=bpa
Sessão fechada para query_3 e bpa.
Execução de query_3 para bpa concluída.
Sessão fechada para query_3 e bpa.
Execução de query_3 para bpa concluída.
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=visitas
Sessão fechada para query_2 e visitas.
Execução de query_2 para visitas concluída.
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=2024, mes=08, tipo=bpa
Sessão fechada para query_3 e bpa.
Execução de query_3 para bpa concluída.
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=2024, mes=08, tipo=bpa
Sessão fechada para query_3 e bpa.
Execução de query_3 para bpa concluída.
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=cadastro
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=visitas
Sessão fechada para query_2 e visitas.
Execução de query_2 para visitas concluída.
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Sessão fechada para query_1 e cadastro.
Execução de query_1 para cadastro concluída.
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=2024, mes=08, tipo=bpa
Sessão fechada para query_3 e bpa.
Execução de query_3 para bpa concluída.
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=visitas
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=cadastro
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=visitas
Sessão fechada para query_2 e visitas.
Execução de query_2 para visitas concluída.
Sessão fechada para query_2 e visitas.
Execução de query_2 para visitas concluída.
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=visitas
Sessão fechada para query_2 e visitas.
Execução de query_2 para visitas concluída.
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=2024, mes=08, tipo=bpa
Sessão fechada para query_3 e bpa.
Execução de query_3 para bpa concluída.
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=2024, mes=08, tipo=bpa
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=cadastro
Sessão fechada para query_1 e cadastro.
Execução de query_1 para cadastro concluída.
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=visitas
Sessão fechada para query_2 e visitas.
Execução de query_2 para visitas concluída.
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=domiciliofcd
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=domiciliofcd
Sessão fechada para query_2 e domiciliofcd.
Execução de query_2 para domiciliofcd concluída.
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=domiciliofcd
Sessão fechada para query_2 e domiciliofcd.
Execução de query_2 para domiciliofcd concluída.
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=visitas
Erro ao executar query_4 para visitas: (psycopg2.errors.SyntaxError) syntax error at end of input
LINE 85: ..._registro) = date_part('year', current_date)) as total_count
                                                                        ^

[SQL: SELECT COUNT(*) FROM (select 
case when t0.nu_cpf_cidadao is null then null else 'X' end as nu_cpf_cidadao,
case when t0.nu_cns is null then null else 'X' end as nu_cns,
co_dim_tipo_ficha, co_dim_municipio, co_dim_profissional, co_dim_tipo_imovel, nu_micro_area, nu_peso, nu_altura, t0.dt_nascimento, co_dim_faixa_etaria, st_visita_compartilhada, st_mot_vis_cad_att, st_mot_vis_visita_periodica, st_mot_vis_busca_ativa, st_mot_vis_acompanhamento, st_mot_vis_egresso_internacao, st_mot_vis_ctrl_ambnte_vetor, st_mot_vis_convte_atvidd_cltva, st_mot_vis_orintacao_prevncao, st_mot_vis_outros, st_busca_ativa_consulta, st_busca_ativa_exame, st_busca_ativa_vacina, st_busca_ativa_bolsa_familia, st_acomp_gestante, st_acomp_puerpera, st_acomp_recem_nascido, st_acomp_crianca, st_acomp_pessoa_desnutricao, st_acomp_pessoa_reabil_deficie, st_acomp_pessoa_hipertensao, st_acomp_pessoa_diabetes, st_acomp_pessoa_asma, st_acomp_pessoa_dpoc_enfisema, st_acomp_pessoa_cancer, st_acomp_pessoa_doenca_cronica, st_acomp_pessoa_hanseniase, st_acomp_pessoa_tuberculose, st_acomp_sintomaticos_respirat, st_acomp_tabagista, st_acomp_domiciliados_acamados, st_acomp_condi_vulnerab_social, st_acomp_condi_bolsa_familia, st_acomp_saude_mental, st_acomp_usuario_alcool, st_acomp_usuario_outras_drogra, st_ctrl_amb_vet_acao_educativa, st_ctrl_amb_vet_imovel_foco, st_ctrl_amb_vet_acao_mecanica, st_ctrl_amb_vet_tratamnt_focal, co_dim_desfecho_visita, co_dim_tipo_origem_dado_transp, co_dim_cds_tipo_origem, co_fat_cidadao_pec, co_dim_tipo_glicemia, nu_medicao_pressao_arterial, nu_medicao_temperatura, nu_medicao_glicemia,
case when nu_latitude between -33.75 and 5.25 then nu_latitude else null end as nu_latitude,
case when nu_longitude between -74.00 and -34.80 then nu_longitude else null end as nu_longitude,
case
when (case when nu_latitude between -33.75 and 5.25 then 1 else 0 end) = 1
and (case when nu_longitude between -74.00 and -34.80 then 1 else 0 end) = 1 then 1 else 0 end as com_localizacao,
case 
when (case when nu_latitude between -33.75 and 5.25 then 1 else 0 end) = 0 and 
(case when nu_longitude between -74.00 and -34.80 then 1 else 0 end) = 0 then 1 else 0 end as sem_localizacao,
case when t12.co_seq_dim_tipo_origem = '2' or t12.co_seq_dim_tipo_origem = '3' then 1 else 0 end as registro_cds,
case when t12.co_seq_dim_tipo_origem = '6' then 1 else 0 end as registro_app_territorio,
ds_dia_semana, nu_dia, nu_mes, nu_ano,
case when ds_dia_semana ilike any (array['%%s%%bado%%', '%%domin%%']) then 1 else 0 end as sab_dom,
t13.ds_turno,
t7.ds_sexo,
t7.sg_sexo,
t3.no_equipe,
t3.nu_ine,
t14.nu_cnes,
t14.no_unidade_saude,
upper(t18.no_profissional) as no_prof_cns_atualizado,
t6.co_seq_dim_profissional,
CASE st_visita_compartilhada
	when 1 THEN 'SIM'
	ELSE 'NÃO' END AS st_visita_compartilhada_mcaf,
case when nu_altura is null then 0 else 1 end as "CONTAGEM_ALTURA",
case when nu_peso is null then 0 else 1 end as "CONTAGEM_PESO",
case when nu_medicao_temperatura is null then 0 else 1 end as "CONTAGEM_TEMPERATURA",
case when nu_medicao_pressao_arterial is null then 0 else 1 end as "CONTAGEM_PRESSÃO_ARTERIAL",
case when nu_medicao_glicemia is null then 0 else 1 end as "CONTAGEM_GLICEMIA",
CASE WHEN t0.NU_CNS IS NULL OR '0' THEN 0 ELSE 1 END AS "SEM_NU_CNS_MCAF",
CASE WHEN t0.NU_CPF_CIDADAO IS NULL OR '0' THEN 0 ELSE 1 END AS "SEM_NU_CPF_MCAF",
CASE
WHEN t1.no_cbo ilike any (array['%%AGENTE COMUNIT%%RIO DE SA%%DE%%']) then 'ACS'
WHEN t1.no_cbo ilike any (array['%%AGENTE DE COMBATE %%S ENDEMIAS%%']) then 'ACE' END AS "CBO_MCAF",
CASE WHEN t0.st_acomp_recem_nascido = '0' AND t0.st_acomp_crianca = '0' THEN '0' ELSE '1' END AS "soma_recem_nascido+crianca",
dt_registro as "DT_VISITA_MCAF",
to_char(t19.dt_ficha, 'hh24:mi:ss') as hr_min_seg,
case when t20.ds_anotacao is null then 'NÃO' else 'SIM' end as anotacao,
to_char(dt_registro, 'dd/mm/yyyy') as "DT_VISITA_MAP",
to_char(t0.dt_nascimento, 'DD/MM/YYYY') as "DT_NASCIMENTO_MCAF",
extract(year from age(current_date,t0.dt_nascimento)) as "IDADE_ATUAL",
extract(year from age(t8.dt_registro, t0.dt_nascimento)) as "IDADE_NA_VISITA",
case t12.co_seq_dim_tipo_origem
	when '1' then 'NÃO INFORMADO'
	when '2' then 'E-SUS CDS OFFLINE'
	when '3' then 'E-SUS CDS ONLINE'
	when '4' then 'PEC'
	when '5' then 'EXTERNO'
	when '6' then 'E-SUS TERRITORIO'
	when '7' then 'E-SUS ATIVIDADE COLETIVA'
	when '8' then 'E-SUS VACINAÇÃO'
	end as "origem_visita",
t10.ds_tipo_imovel
from tb_fat_visita_domiciliar t0 
left join tb_dim_cbo t1 on t1.co_seq_dim_cbo = t0.co_dim_cbo
left join tb_dim_desfecho_visita t2 on t2.co_seq_dim_desfecho_visita = t0.co_dim_desfecho_visita
left join tb_dim_equipe t3 on t3.co_seq_dim_equipe = t0.co_dim_equipe
left join tb_dim_profissional t6 on t6.co_seq_dim_profissional = t0.co_dim_profissional
left join tb_dim_sexo t7 on t7.co_seq_dim_sexo = t0.co_dim_sexo
left join tb_dim_tempo t8 on t8.co_seq_dim_tempo = t0.co_dim_tempo
left join tb_dim_tipo_ficha t9 on t9.co_seq_dim_tipo_ficha = t0.co_dim_tipo_ficha
left join tb_dim_tipo_imovel t10 on t10.co_seq_dim_tipo_imovel = t0.co_dim_tipo_imovel
left join tb_dim_tipo_glicemia t11 on t11.co_seq_dim_tipo_glicemia = t0.co_dim_tipo_glicemia
left join tb_dim_tipo_origem t12 on t12.co_seq_dim_tipo_origem = t0.co_dim_cds_tipo_origem
left join tb_dim_turno t13 on t13.co_seq_dim_turno = t0.co_dim_turno
left join tb_dim_unidade_saude t14 on t14.co_seq_dim_unidade_saude = t0.co_dim_unidade_saude
left join tb_dim_tipo_origem_dado_transp t15 on t15.co_seq_dim_tp_orgm_dado_transp = t0.co_dim_tipo_origem_dado_transp
--left join tb_fat_cidadao_pec t16 on t16.co_seq_fat_cidadao_pec = t0.co_fat_cidadao_pec
left join tb_prof_historico_cns t17 on t17.nu_cns = t6.nu_cns
left join tb_prof t18 on t18.co_seq_prof = t17.co_prof
left Join tb_cds_ficha_visita_domiciliar t19 on t19.co_unico_ficha = t0.nu_uuid_ficha
left join tb_visita_domiciliar_acs t20 on t20.co_unico_visita_domiciliar = t0.nu_uuid_ficha
where
--t1.no_cbo ilike any (array['%%AGENTE DE COMBATE %%S ENDEMIAS%%', '%%AGENTE COMUNIT%%RIO DE SA%%DE%%'])
t1.nu_cbo like any (array['515105', '515140', '5151F1'])
--OPÇÃO 1 - EXTRAIR VISITAS ENTRE PERÍODOS (INICIO/FIM)
--and dt_registro between '2022-01-01' and '3000-12-31'
--OPÇÃO 2 - EXTRAIR VISITAS DOS ÚLTIMOS 12 MESES
and dt_registro >= '01/01/2021'--date_trunc('month', current_date) - interval '47 months'
--OPÇÃO 3 - EXTRAIR VISITAS APENAS DO ANO ATUAL
--and date_part('year', dt_registro) = date_part('year', current_date)) as total_count]
(Background on this error at: https://sqlalche.me/e/20/f405)
Sessão fechada para query_4 e visitas.
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=visitas
Erro ao executar query_4 para visitas: (psycopg2.errors.SyntaxError) syntax error at or near "date_trunc"
LINE 79: and dt_registro date_trunc('month', current_date) - interval...
                         ^

[SQL: SELECT COUNT(*) FROM (select 
case when t0.nu_cpf_cidadao is null then null else 'X' end as nu_cpf_cidadao,
case when t0.nu_cns is null then null else 'X' end as nu_cns,
co_dim_tipo_ficha, co_dim_municipio, co_dim_profissional, co_dim_tipo_imovel, nu_micro_area, nu_peso, nu_altura, t0.dt_nascimento, co_dim_faixa_etaria, st_visita_compartilhada, st_mot_vis_cad_att, st_mot_vis_visita_periodica, st_mot_vis_busca_ativa, st_mot_vis_acompanhamento, st_mot_vis_egresso_internacao, st_mot_vis_ctrl_ambnte_vetor, st_mot_vis_convte_atvidd_cltva, st_mot_vis_orintacao_prevncao, st_mot_vis_outros, st_busca_ativa_consulta, st_busca_ativa_exame, st_busca_ativa_vacina, st_busca_ativa_bolsa_familia, st_acomp_gestante, st_acomp_puerpera, st_acomp_recem_nascido, st_acomp_crianca, st_acomp_pessoa_desnutricao, st_acomp_pessoa_reabil_deficie, st_acomp_pessoa_hipertensao, st_acomp_pessoa_diabetes, st_acomp_pessoa_asma, st_acomp_pessoa_dpoc_enfisema, st_acomp_pessoa_cancer, st_acomp_pessoa_doenca_cronica, st_acomp_pessoa_hanseniase, st_acomp_pessoa_tuberculose, st_acomp_sintomaticos_respirat, st_acomp_tabagista, st_acomp_domiciliados_acamados, st_acomp_condi_vulnerab_social, st_acomp_condi_bolsa_familia, st_acomp_saude_mental, st_acomp_usuario_alcool, st_acomp_usuario_outras_drogra, st_ctrl_amb_vet_acao_educativa, st_ctrl_amb_vet_imovel_foco, st_ctrl_amb_vet_acao_mecanica, st_ctrl_amb_vet_tratamnt_focal, co_dim_desfecho_visita, co_dim_tipo_origem_dado_transp, co_dim_cds_tipo_origem, co_fat_cidadao_pec, co_dim_tipo_glicemia, nu_medicao_pressao_arterial, nu_medicao_temperatura, nu_medicao_glicemia,
case when nu_latitude between -33.75 and 5.25 then nu_latitude else null end as nu_latitude,
case when nu_longitude between -74.00 and -34.80 then nu_longitude else null end as nu_longitude,
case
when (case when nu_latitude between -33.75 and 5.25 then 1 else 0 end) = 1
and (case when nu_longitude between -74.00 and -34.80 then 1 else 0 end) = 1 then 1 else 0 end as com_localizacao,
case 
when (case when nu_latitude between -33.75 and 5.25 then 1 else 0 end) = 0 and 
(case when nu_longitude between -74.00 and -34.80 then 1 else 0 end) = 0 then 1 else 0 end as sem_localizacao,
case when t12.co_seq_dim_tipo_origem = '2' or t12.co_seq_dim_tipo_origem = '3' then 1 else 0 end as registro_cds,
case when t12.co_seq_dim_tipo_origem = '6' then 1 else 0 end as registro_app_territorio,
ds_dia_semana, nu_dia, nu_mes, nu_ano,
case when ds_dia_semana ilike any (array['%%s%%bado%%', '%%domin%%']) then 1 else 0 end as sab_dom,
t13.ds_turno,
t7.ds_sexo,
t7.sg_sexo,
t3.no_equipe,
t3.nu_ine,
t14.nu_cnes,
t14.no_unidade_saude,
upper(t18.no_profissional) as no_prof_cns_atualizado,
t6.co_seq_dim_profissional,
CASE st_visita_compartilhada
	when 1 THEN 'SIM'
	ELSE 'NÃO' END AS st_visita_compartilhada_mcaf,
case when nu_altura is null then 0 else 1 end as "CONTAGEM_ALTURA",
case when nu_peso is null then 0 else 1 end as "CONTAGEM_PESO",
case when nu_medicao_temperatura is null then 0 else 1 end as "CONTAGEM_TEMPERATURA",
case when nu_medicao_pressao_arterial is null then 0 else 1 end as "CONTAGEM_PRESSÃO_ARTERIAL",
case when nu_medicao_glicemia is null then 0 else 1 end as "CONTAGEM_GLICEMIA",
CASE WHEN t0.NU_CNS IS NULL OR '0' THEN 0 ELSE 1 END AS "SEM_NU_CNS_MCAF",
CASE WHEN t0.NU_CPF_CIDADAO IS NULL OR '0' THEN 0 ELSE 1 END AS "SEM_NU_CPF_MCAF",
CASE
WHEN t1.no_cbo ilike any (array['%%AGENTE COMUNIT%%RIO DE SA%%DE%%']) then 'ACS'
WHEN t1.no_cbo ilike any (array['%%AGENTE DE COMBATE %%S ENDEMIAS%%']) then 'ACE' END AS "CBO_MCAF",
CASE WHEN t0.st_acomp_recem_nascido = '0' AND t0.st_acomp_crianca = '0' THEN '0' ELSE '1' END AS "soma_recem_nascido+crianca",
dt_registro as "DT_VISITA_MCAF",
to_char(t19.dt_ficha, 'hh24:mi:ss') as hr_min_seg,
case when t20.ds_anotacao is null then 'NÃO' else 'SIM' end as anotacao,
to_char(dt_registro, 'dd/mm/yyyy') as "DT_VISITA_MAP",
to_char(t0.dt_nascimento, 'DD/MM/YYYY') as "DT_NASCIMENTO_MCAF",
extract(year from age(current_date,t0.dt_nascimento)) as "IDADE_ATUAL",
extract(year from age(t8.dt_registro, t0.dt_nascimento)) as "IDADE_NA_VISITA",
case t12.co_seq_dim_tipo_origem
	when '1' then 'NÃO INFORMADO'
	when '2' then 'E-SUS CDS OFFLINE'
	when '3' then 'E-SUS CDS ONLINE'
	when '4' then 'PEC'
	when '5' then 'EXTERNO'
	when '6' then 'E-SUS TERRITORIO'
	when '7' then 'E-SUS ATIVIDADE COLETIVA'
	when '8' then 'E-SUS VACINAÇÃO'
	end as "origem_visita",
t10.ds_tipo_imovel
from tb_fat_visita_domiciliar t0 
left join tb_dim_cbo t1 on t1.co_seq_dim_cbo = t0.co_dim_cbo
left join tb_dim_desfecho_visita t2 on t2.co_seq_dim_desfecho_visita = t0.co_dim_desfecho_visita
left join tb_dim_equipe t3 on t3.co_seq_dim_equipe = t0.co_dim_equipe
left join tb_dim_profissional t6 on t6.co_seq_dim_profissional = t0.co_dim_profissional
left join tb_dim_sexo t7 on t7.co_seq_dim_sexo = t0.co_dim_sexo
left join tb_dim_tempo t8 on t8.co_seq_dim_tempo = t0.co_dim_tempo
left join tb_dim_tipo_ficha t9 on t9.co_seq_dim_tipo_ficha = t0.co_dim_tipo_ficha
left join tb_dim_tipo_imovel t10 on t10.co_seq_dim_tipo_imovel = t0.co_dim_tipo_imovel
left join tb_dim_tipo_glicemia t11 on t11.co_seq_dim_tipo_glicemia = t0.co_dim_tipo_glicemia
left join tb_dim_tipo_origem t12 on t12.co_seq_dim_tipo_origem = t0.co_dim_cds_tipo_origem
left join tb_dim_turno t13 on t13.co_seq_dim_turno = t0.co_dim_turno
left join tb_dim_unidade_saude t14 on t14.co_seq_dim_unidade_saude = t0.co_dim_unidade_saude
left join tb_dim_tipo_origem_dado_transp t15 on t15.co_seq_dim_tp_orgm_dado_transp = t0.co_dim_tipo_origem_dado_transp
--left join tb_fat_cidadao_pec t16 on t16.co_seq_fat_cidadao_pec = t0.co_fat_cidadao_pec
left join tb_prof_historico_cns t17 on t17.nu_cns = t6.nu_cns
left join tb_prof t18 on t18.co_seq_prof = t17.co_prof
left Join tb_cds_ficha_visita_domiciliar t19 on t19.co_unico_ficha = t0.nu_uuid_ficha
left join tb_visita_domiciliar_acs t20 on t20.co_unico_visita_domiciliar = t0.nu_uuid_ficha
where
t1.nu_cbo like any (array['515105', '515140', '5151F1'])
and dt_registro date_trunc('month', current_date) - interval '47 months'
) as total_count]
(Background on this error at: https://sqlalche.me/e/20/f405)
Sessão fechada para query_4 e visitas.
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=visitas
Sessão fechada para query_4 e visitas.
Execução de query_4 para visitas concluída.
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=visitas
Erro ao executar query_4 para visitas: Nenhuma linha encontrada na consulta.
Sessão fechada para query_4 e visitas.
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=visitas
Erro ao executar query_4 para visitas: Nenhuma linha encontrada na consulta.
Sessão fechada para query_4 e visitas.
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=visitas
Sessão fechada para query_4 e visitas.
Execução de query_4 para visitas concluída.
Conectado ao banco de dados externo: postgresql://postgres:ht*qkwmJ7KMV2ly3[]KpLpc]Mv@10.2.2.161:5433/esus
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Parâmetros recebidos: ano=None, mes=None, tipo=visitas
Conectado ao banco de dados local: postgresql+psycopg2://postgres:esus@localhost:5432/esus
Sessão fechada para query_4 e visitas.
Execução de query_4 para visitas concluída.
